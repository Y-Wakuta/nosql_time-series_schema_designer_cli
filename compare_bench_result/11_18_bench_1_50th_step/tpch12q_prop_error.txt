(eval):19: warning: constant ::FALSE is deprecated
(eval):45: warning: constant ::TRUE is deprecated
clearing keyspace: tpch
CREATE COLUMNFAMILY "i4165563175" ("orders_o_orderkey" uuid, "customer_c_custkey" uuid, "orders_o_orderdate" date, "orders_o_shippriority" int, "value_hash" text, PRIMARY KEY(("orders_o_orderkey"), "customer_c_custkey", value_hash));
CREATE COLUMNFAMILY "i2134332891" ("customer_c_custkey" uuid, "customer_c_mktsegment" text, "value_hash" text, PRIMARY KEY(("customer_c_custkey"), value_hash));
CREATE COLUMNFAMILY "i3709611601" ("customer_c_custkey" uuid, "nation_n_nationkey" uuid, "region_r_regionkey" uuid, "region_r_name" text, "nation_n_name" text, "value_hash" text, PRIMARY KEY(("customer_c_custkey"), "nation_n_nationkey", "region_r_regionkey", value_hash));
CREATE COLUMNFAMILY "i1245511653" ("orders_o_orderkey" uuid, "nation_n_nationkey" uuid, "region_r_regionkey" uuid, "customer_c_custkey" uuid, "region_r_name" text, "orders_o_orderdate" date, "nation_n_name" text, "value_hash" text, PRIMARY KEY(("orders_o_orderkey"), "nation_n_nationkey", "region_r_regionkey", "customer_c_custkey", value_hash));
CREATE COLUMNFAMILY "i2365186833" ("orders_o_orderkey" uuid, "nation_n_nationkey" uuid, "customer_c_custkey" uuid, "orders_o_orderdate" date, "customer_c_name" text, "customer_c_acctbal" float, "nation_n_name" text, "customer_c_address" text, "customer_c_phone" text, "customer_c_comment" text, "value_hash" text, PRIMARY KEY(("orders_o_orderkey"), "nation_n_nationkey", "customer_c_custkey", value_hash));
CREATE COLUMNFAMILY "i2920863803" ("customer_c_custkey" uuid, "nation_n_nationkey" uuid, "customer_c_name" text, "customer_c_acctbal" float, "nation_n_name" text, "customer_c_address" text, "customer_c_phone" text, "customer_c_comment" text, "value_hash" text, PRIMARY KEY(("customer_c_custkey"), "nation_n_nationkey", value_hash));
CREATE COLUMNFAMILY "i2685541315" ("partsupp_ps_partkey" uuid, "part_p_partkey" uuid, "part_p_type" text, "value_hash" text, PRIMARY KEY(("partsupp_ps_partkey"), "part_p_partkey", "part_p_type", value_hash));
CREATE COLUMNFAMILY "i3310665277" ("partsupp_ps_partkey" uuid, "part_p_partkey" uuid, "part_p_name" text, "partsupp_ps_supplycost" float, "value_hash" text, PRIMARY KEY(("partsupp_ps_partkey"), "part_p_partkey", value_hash));
CREATE COLUMNFAMILY "i3468441746" ("partsupp_ps_partkey" uuid, "partsupp_ps_supplycost" float, "value_hash" text, PRIMARY KEY(("partsupp_ps_partkey"), value_hash));
CREATE COLUMNFAMILY "i2211924717" ("orders_o_orderkey" uuid, "orders_o_orderpriority" text, "value_hash" text, PRIMARY KEY(("orders_o_orderkey"), value_hash));
CREATE COLUMNFAMILY "i687323220" ("lineitem_l_linenumber" uuid, "lineitem_l_returnflag" text, "lineitem_l_extendedprice" float, "lineitem_l_discount" float, "lineitem_l_shipmode" text, "lineitem_l_commitdate" date, "lineitem_l_shipdate" date, "lineitem_l_receiptdate" date, "value_hash" text, PRIMARY KEY(("lineitem_l_linenumber"), value_hash));
CREATE COLUMNFAMILY "i3076772946" ("lineitem_l_linenumber" uuid, "partsupp_ps_partkey" uuid, "lineitem_l_extendedprice" float, "lineitem_l_discount" float, "partsupp_ps_supplycost" float, "lineitem_l_quantity" float, "value_hash" text, PRIMARY KEY(("lineitem_l_linenumber"), "partsupp_ps_partkey", value_hash));
CREATE COLUMNFAMILY "i1891546182" ("lineitem_l_linenumber" uuid, "partsupp_ps_partkey" uuid, "part_p_partkey" uuid, "part_p_type" text, "lineitem_l_extendedprice" float, "lineitem_l_discount" float, "value_hash" text, PRIMARY KEY(("lineitem_l_linenumber"), "partsupp_ps_partkey", "part_p_partkey", value_hash));
CREATE COLUMNFAMILY "i3240690990" ("lineitem_l_linenumber" uuid, "part_p_partkey" uuid, "partsupp_ps_partkey" uuid, "part_p_name" text, "lineitem_l_extendedprice" float, "lineitem_l_discount" float, "partsupp_ps_supplycost" float, "lineitem_l_quantity" float, "value_hash" text, PRIMARY KEY(("lineitem_l_linenumber"), "part_p_partkey", "partsupp_ps_partkey", value_hash));
CREATE COLUMNFAMILY "i662047096" ("region_r_name" text, "part_p_size" int, "part_p_type" text, "partsupp_ps_supplycost" float, "supplier_s_acctbal" float, "nation_n_name" text, "supplier_s_name" text, "region_r_regionkey" uuid, "nation_n_nationkey" uuid, "supplier_s_suppkey" uuid, "partsupp_ps_partkey" uuid, "part_p_partkey" uuid, "part_p_mfgr" text, "supplier_s_address" text, "supplier_s_phone" text, "supplier_s_comment" text, "value_hash" text, PRIMARY KEY(("region_r_name"), "part_p_size", "part_p_type", "partsupp_ps_supplycost", "supplier_s_acctbal", "nation_n_name", "supplier_s_name", "region_r_regionkey", "nation_n_nationkey", "supplier_s_suppkey", "partsupp_ps_partkey", "part_p_partkey", value_hash));
CREATE COLUMNFAMILY "i144261828" ("region_r_name" text, "region_r_regionkey" uuid, "nation_n_nationkey" uuid, "supplier_s_suppkey" uuid, "partsupp_ps_partkey" uuid, "partsupp_ps_supplycost" float, "value_hash" text, PRIMARY KEY(("region_r_name"), "region_r_regionkey", "nation_n_nationkey", "supplier_s_suppkey", "partsupp_ps_partkey", value_hash));
CREATE COLUMNFAMILY "i1726533611" ("customer_c_mktsegment" text, "lineitem_l_extendedprice" float, "lineitem_l_discount" float, "orders_o_orderdate" date, "customer_c_custkey" uuid, "orders_o_orderkey" uuid, "lineitem_l_linenumber" uuid, "orders_o_shippriority" int, "lineitem_l_shipdate" date, "value_hash" text, PRIMARY KEY(("customer_c_mktsegment"), "lineitem_l_extendedprice", "lineitem_l_discount", "orders_o_orderdate", "customer_c_custkey", "orders_o_orderkey", "lineitem_l_linenumber", value_hash));
CREATE COLUMNFAMILY "i3435119087" ("region_r_name" text, "nation_n_name" text, "region_r_regionkey" uuid, "nation_n_nationkey" uuid, "value_hash" text, PRIMARY KEY(("region_r_name"), "nation_n_name", "region_r_regionkey", "nation_n_nationkey", value_hash));
CREATE COLUMNFAMILY "i2634107645" ("nation_n_nationkey" uuid, "orders_o_orderdate" date, "lineitem_l_discount" float, "lineitem_l_extendedprice" float, "customer_c_custkey" uuid, "lineitem_l_linenumber" uuid, "orders_o_orderkey" uuid, "value_hash" text, PRIMARY KEY(("nation_n_nationkey"), "orders_o_orderdate", "lineitem_l_discount", "lineitem_l_extendedprice", "customer_c_custkey", "lineitem_l_linenumber", "orders_o_orderkey", value_hash));
CREATE COLUMNFAMILY "i1327449593" ("nation_n_name" text, "lineitem_l_shipdate" date, "nation_n_nationkey" uuid, "customer_c_custkey" uuid, "orders_o_orderkey" uuid, "lineitem_l_linenumber" uuid, "lineitem_l_extendedprice" float, "lineitem_l_discount" float, "value_hash" text, PRIMARY KEY(("nation_n_name"), "lineitem_l_shipdate", "nation_n_nationkey", "customer_c_custkey", "orders_o_orderkey", "lineitem_l_linenumber", value_hash));
CREATE COLUMNFAMILY "i2386081023" ("region_r_name" text, "nation_n_name" text, "part_p_type" text, "orders_o_orderdate" date, "region_r_regionkey" uuid, "nation_n_nationkey" uuid, "customer_c_custkey" uuid, "orders_o_orderkey" uuid, "lineitem_l_linenumber" uuid, "partsupp_ps_partkey" uuid, "part_p_partkey" uuid, "lineitem_l_extendedprice" float, "lineitem_l_discount" float, "value_hash" text, PRIMARY KEY(("region_r_name"), "nation_n_name", "part_p_type", "orders_o_orderdate", "region_r_regionkey", "nation_n_nationkey", "customer_c_custkey", "orders_o_orderkey", "lineitem_l_linenumber", "partsupp_ps_partkey", "part_p_partkey", value_hash));
CREATE COLUMNFAMILY "i1400082724" ("part_p_name" text, "orders_o_orderkey" uuid, "nation_n_name" text, "orders_o_orderdate" date, "part_p_partkey" uuid, "partsupp_ps_partkey" uuid, "lineitem_l_linenumber" uuid, "customer_c_custkey" uuid, "nation_n_nationkey" uuid, "lineitem_l_extendedprice" float, "lineitem_l_discount" float, "partsupp_ps_supplycost" float, "lineitem_l_quantity" float, "value_hash" text, PRIMARY KEY(("part_p_name"), "orders_o_orderkey", "nation_n_name", "orders_o_orderdate", "part_p_partkey", "partsupp_ps_partkey", "lineitem_l_linenumber", "customer_c_custkey", "nation_n_nationkey", value_hash));
CREATE COLUMNFAMILY "i1394347799" ("lineitem_l_returnflag" text, "lineitem_l_extendedprice" float, "lineitem_l_discount" float, "orders_o_orderdate" date, "lineitem_l_linenumber" uuid, "orders_o_orderkey" uuid, "customer_c_custkey" uuid, "nation_n_nationkey" uuid, "customer_c_name" text, "customer_c_acctbal" float, "nation_n_name" text, "customer_c_address" text, "customer_c_phone" text, "customer_c_comment" text, "value_hash" text, PRIMARY KEY(("lineitem_l_returnflag"), "lineitem_l_extendedprice", "lineitem_l_discount", "orders_o_orderdate", "lineitem_l_linenumber", "orders_o_orderkey", "customer_c_custkey", "nation_n_nationkey", value_hash));
CREATE COLUMNFAMILY "i1774703822" ("nation_n_name" text, "partsupp_ps_supplycost" float, "partsupp_ps_availqty" int, "nation_n_nationkey" uuid, "supplier_s_suppkey" uuid, "partsupp_ps_partkey" uuid, "value_hash" text, PRIMARY KEY(("nation_n_name"), "partsupp_ps_supplycost", "partsupp_ps_availqty", "nation_n_nationkey", "supplier_s_suppkey", "partsupp_ps_partkey", value_hash));
CREATE COLUMNFAMILY "i369452371" ("lineitem_l_shipmode" text, "lineitem_l_commitdate" date, "lineitem_l_linenumber" uuid, "orders_o_orderkey" uuid, "orders_o_orderpriority" text, "lineitem_l_shipdate" date, "lineitem_l_receiptdate" date, "value_hash" text, PRIMARY KEY(("lineitem_l_shipmode"), "lineitem_l_commitdate", "lineitem_l_linenumber", "orders_o_orderkey", value_hash));
 INFO  nose::loader::mysqlloader : i4165563175 [orders.o_orderkey] [customer.c_custkey] â†’ [orders.o_orderdate, orders.o_shippriority]  $48 Graph(nodes: orders, customer, edges: {orders=>#<Set: {orders.o_custkey}>, customer=>#<Set: {customer.from_orders}>})
SELECT DISTINCT orders.o_orderkey AS orders_o_orderkey, customer.c_custkey AS customer_c_custkey, orders.o_orderdate AS orders_o_orderdate, orders.o_shippriority AS orders_o_shippriority FROM orders JOIN customer WHERE orders.o_custkey=customer.c_custkey
query time: 0.039121805 for i4165563175
== start inserting : i4165563175, 575
insert through csv: i4165563175, /tmp/d20201118-32331-6uxsqp/i4165563175_0.csv, 575
loading through csv time: 0.826025908 for 575 records
 INFO  nose::loader::mysqlloader : i2134332891 [customer.c_custkey] [] â†’ [customer.c_mktsegment]  $26 Graph(nodes: customer, edges: {})
SELECT DISTINCT customer.c_custkey AS customer_c_custkey, customer.c_mktsegment AS customer_c_mktsegment FROM customer
query time: 0.019009322 for i2134332891
== start inserting : i2134332891, 3000
insert through csv: i2134332891, /tmp/d20201118-32331-o9b3bk/i2134332891_0.csv, 3000
loading through csv time: 0.802657939 for 3000 records
 INFO  nose::loader::mysqlloader : i3709611601 [customer.c_custkey] [nation.n_nationkey, region.r_regionkey] â†’ [region.r_name, nation.n_name]  $68 Graph(nodes: customer, nation, region, edges: {customer=>#<Set: {customer.c_nationkey}>, nation=>#<Set: {nation.from_customer, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>})
SELECT DISTINCT customer.c_custkey AS customer_c_custkey, nation.n_nationkey AS nation_n_nationkey, region.r_regionkey AS region_r_regionkey, region.r_name AS region_r_name, nation.n_name AS nation_n_name FROM customer JOIN nation JOIN region WHERE customer.c_nationkey=nation.n_nationkey AND nation.n_regionkey=region.r_regionkey
query time: 0.030002888 for i3709611601
== start inserting : i3709611601, 3000
insert through csv: i3709611601, /tmp/d20201118-32331-16ayqi8/i3709611601_0.csv, 3000
loading through csv time: 1.187261896 for 3000 records
 INFO  nose::loader::mysqlloader : i1245511653 [orders.o_orderkey] [nation.n_nationkey, region.r_regionkey, customer.c_custkey] â†’ [region.r_name, orders.o_orderdate, nation.n_name]  $92 Graph(nodes: orders, customer, nation, region, edges: {orders=>#<Set: {orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>})
SELECT DISTINCT orders.o_orderkey AS orders_o_orderkey, nation.n_nationkey AS nation_n_nationkey, region.r_regionkey AS region_r_regionkey, customer.c_custkey AS customer_c_custkey, region.r_name AS region_r_name, orders.o_orderdate AS orders_o_orderdate, nation.n_name AS nation_n_name FROM orders JOIN customer JOIN nation JOIN region WHERE orders.o_custkey=customer.c_custkey AND customer.c_nationkey=nation.n_nationkey AND nation.n_regionkey=region.r_regionkey
query time: 0.007830804 for i1245511653
== start inserting : i1245511653, 575
insert through csv: i1245511653, /tmp/d20201118-32331-y8jgha/i1245511653_0.csv, 575
loading through csv time: 0.712681993 for 575 records
 INFO  nose::loader::mysqlloader : i2365186833 [orders.o_orderkey] [nation.n_nationkey, customer.c_custkey] â†’ [orders.o_orderdate, customer.c_name, customer.c_acctbal, nation.n_name, customer.c_address, customer.c_phone, customer.c_comment]  $114 Graph(nodes: orders, customer, nation, edges: {orders=>#<Set: {orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>})
SELECT DISTINCT orders.o_orderkey AS orders_o_orderkey, nation.n_nationkey AS nation_n_nationkey, customer.c_custkey AS customer_c_custkey, orders.o_orderdate AS orders_o_orderdate, customer.c_name AS customer_c_name, customer.c_acctbal AS customer_c_acctbal, nation.n_name AS nation_n_name, customer.c_address AS customer_c_address, customer.c_phone AS customer_c_phone, customer.c_comment AS customer_c_comment FROM orders JOIN customer JOIN nation WHERE orders.o_custkey=customer.c_custkey AND customer.c_nationkey=nation.n_nationkey
query time: 0.009503313 for i2365186833
== start inserting : i2365186833, 575
insert through csv: i2365186833, /tmp/d20201118-32331-7an09o/i2365186833_0.csv, 575
loading through csv time: 0.754155638 for 575 records
 INFO  nose::loader::mysqlloader : i2920863803 [customer.c_custkey] [nation.n_nationkey] â†’ [customer.c_name, customer.c_acctbal, nation.n_name, customer.c_address, customer.c_phone, customer.c_comment]  $90 Graph(nodes: customer, nation, edges: {customer=>#<Set: {customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>})
SELECT DISTINCT customer.c_custkey AS customer_c_custkey, nation.n_nationkey AS nation_n_nationkey, customer.c_name AS customer_c_name, customer.c_acctbal AS customer_c_acctbal, nation.n_name AS nation_n_name, customer.c_address AS customer_c_address, customer.c_phone AS customer_c_phone, customer.c_comment AS customer_c_comment FROM customer JOIN nation WHERE customer.c_nationkey=nation.n_nationkey
query time: 0.013543714 for i2920863803
== start inserting : i2920863803, 3000
insert through csv: i2920863803, /tmp/d20201118-32331-1dtoqzi/i2920863803_0.csv, 3000
loading through csv time: 0.754712593 for 3000 records
 INFO  nose::loader::mysqlloader : i2685541315 [partsupp.ps_partkey] [part.p_partkey, part.p_type] â†’ []  $42 Graph(nodes: partsupp, part, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey}>})
SELECT DISTINCT partsupp.ps_partkey AS partsupp_ps_partkey, part.p_partkey AS part_p_partkey, part.p_type AS part_p_type FROM partsupp JOIN part WHERE partsupp.ps_partkey=part.p_partkey
query time: 1.068099806 for i2685541315
== start inserting : i2685541315, 200000
insert through csv: i2685541315, /tmp/d20201118-32331-4kybq5/i2685541315_0.csv, 200000
loading through csv time: 3.876570921 for 200000 records
 INFO  nose::loader::mysqlloader : i3310665277 [partsupp.ps_partkey] [part.p_partkey] â†’ [part.p_name, partsupp.ps_supplycost]  $50 Graph(nodes: part, partsupp, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey}>})
SELECT DISTINCT partsupp.ps_partkey AS partsupp_ps_partkey, part.p_partkey AS part_p_partkey, part.p_name AS part_p_name, partsupp.ps_supplycost AS partsupp_ps_supplycost FROM part JOIN partsupp WHERE partsupp.ps_partkey=part.p_partkey
query time: 1.479129464 for i3310665277
== start inserting : i3310665277, 799986
insert through csv: i3310665277, /tmp/d20201118-32331-1wmbfhh/i3310665277_0.csv, 799986
loading through csv time: 16.436385529 for 799986 records
 INFO  nose::loader::mysqlloader : i3468441746 [partsupp.ps_partkey] [] â†’ [partsupp.ps_supplycost]  $24 Graph(nodes: partsupp, edges: {})
SELECT DISTINCT partsupp.ps_partkey AS partsupp_ps_partkey, partsupp.ps_supplycost AS partsupp_ps_supplycost FROM partsupp
query time: 0.816978736 for i3468441746
== start inserting : i3468441746, 799986
insert through csv: i3468441746, /tmp/d20201118-32331-gwfv26/i3468441746_0.csv, 799986
loading through csv time: 13.155065312 for 799986 records
 INFO  nose::loader::mysqlloader : i2211924717 [orders.o_orderkey] [] â†’ [orders.o_orderpriority]  $26 Graph(nodes: orders, edges: {})
SELECT DISTINCT orders.o_orderkey AS orders_o_orderkey, orders.o_orderpriority AS orders_o_orderpriority FROM orders
query time: 0.358350063 for i2211924717
== start inserting : i2211924717, 30000
insert through csv: i2211924717, /tmp/d20201118-32331-9jkxdv/i2211924717_0.csv, 30000
loading through csv time: 1.322389471 for 30000 records
 INFO  nose::loader::mysqlloader : i687323220 [lineitem.l_linenumber] [] â†’ [lineitem.l_returnflag, lineitem.l_extendedprice, lineitem.l_discount, lineitem.l_shipmode, lineitem.l_commitdate, lineitem.l_shipdate, lineitem.l_receiptdate]  $76 Graph(nodes: lineitem, edges: {})
SELECT DISTINCT lineitem.l_linenumber AS lineitem_l_linenumber, lineitem.l_returnflag AS lineitem_l_returnflag, lineitem.l_extendedprice AS lineitem_l_extendedprice, lineitem.l_discount AS lineitem_l_discount, lineitem.l_shipmode AS lineitem_l_shipmode, lineitem.l_commitdate AS lineitem_l_commitdate, lineitem.l_shipdate AS lineitem_l_shipdate, lineitem.l_receiptdate AS lineitem_l_receiptdate FROM lineitem
query time: 1.164988839 for i687323220
== start inserting : i687323220, 120024
insert through csv: i687323220, /tmp/d20201118-32331-180jeg2/i687323220_0.csv, 120024
loading through csv time: 3.858704783 for 120024 records
 INFO  nose::loader::mysqlloader : i3076772946 [lineitem.l_linenumber] [partsupp.ps_partkey] â†’ [lineitem.l_extendedprice, lineitem.l_discount, partsupp.ps_supplycost, lineitem.l_quantity]  $64 Graph(nodes: partsupp, lineitem, edges: {partsupp=>#<Set: {partsupp.from_lineitem}>, lineitem=>#<Set: {lineitem.l_suppkey}>})
SELECT DISTINCT lineitem.l_linenumber AS lineitem_l_linenumber, partsupp.ps_partkey AS partsupp_ps_partkey, lineitem.l_extendedprice AS lineitem_l_extendedprice, lineitem.l_discount AS lineitem_l_discount, partsupp.ps_supplycost AS partsupp_ps_supplycost, lineitem.l_quantity AS lineitem_l_quantity FROM partsupp JOIN lineitem WHERE lineitem.l_suppkey=partsupp.ps_partkey
query time: 1.730393805 for i3076772946
== start inserting : i3076772946, 480075
insert through csv: i3076772946, /tmp/d20201118-32331-g9vl2q/i3076772946_0.csv, 480075
loading through csv time: 12.810494694 for 480075 records
 INFO  nose::loader::mysqlloader : i1891546182 [lineitem.l_linenumber] [partsupp.ps_partkey, part.p_partkey] â†’ [part.p_type, lineitem.l_extendedprice, lineitem.l_discount]  $74 Graph(nodes: part, partsupp, lineitem, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey, partsupp.from_lineitem}>, lineitem=>#<Set: {lineitem.l_suppkey}>})
SELECT DISTINCT lineitem.l_linenumber AS lineitem_l_linenumber, partsupp.ps_partkey AS partsupp_ps_partkey, part.p_partkey AS part_p_partkey, part.p_type AS part_p_type, lineitem.l_extendedprice AS lineitem_l_extendedprice, lineitem.l_discount AS lineitem_l_discount FROM part JOIN partsupp JOIN lineitem WHERE partsupp.ps_partkey=part.p_partkey AND lineitem.l_suppkey=partsupp.ps_partkey
query time: 2.157630052 for i1891546182
== start inserting : i1891546182, 120024
insert through csv: i1891546182, /tmp/d20201118-32331-1b8o9n8/i1891546182_0.csv, 120024
loading through csv time: 4.049768936 for 120024 records
 INFO  nose::loader::mysqlloader : i3240690990 [lineitem.l_linenumber] [part.p_partkey, partsupp.ps_partkey] â†’ [part.p_name, lineitem.l_extendedprice, lineitem.l_discount, partsupp.ps_supplycost, lineitem.l_quantity]  $90 Graph(nodes: part, partsupp, lineitem, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey, partsupp.from_lineitem}>, lineitem=>#<Set: {lineitem.l_suppkey}>})
SELECT DISTINCT lineitem.l_linenumber AS lineitem_l_linenumber, part.p_partkey AS part_p_partkey, partsupp.ps_partkey AS partsupp_ps_partkey, part.p_name AS part_p_name, lineitem.l_extendedprice AS lineitem_l_extendedprice, lineitem.l_discount AS lineitem_l_discount, partsupp.ps_supplycost AS partsupp_ps_supplycost, lineitem.l_quantity AS lineitem_l_quantity FROM part JOIN partsupp JOIN lineitem WHERE partsupp.ps_partkey=part.p_partkey AND lineitem.l_suppkey=partsupp.ps_partkey
query time: 2.950454256 for i3240690990
== start inserting : i3240690990, 480075
insert through csv: i3240690990, /tmp/d20201118-32331-1y810o0/i3240690990_0.csv, 480075
loading through csv time: 15.720757086 for 480075 records
 INFO  nose::loader::mysqlloader : i662047096 [region.r_name] [part.p_size, part.p_type, partsupp.ps_supplycost, supplier.s_acctbal, nation.n_name, supplier.s_name, region.r_regionkey, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey, part.p_partkey] â†’ [part.p_mfgr, supplier.s_address, supplier.s_phone, supplier.s_comment]  $184 Graph(nodes: part, partsupp, supplier, nation, region, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey, partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>})
SELECT DISTINCT region.r_name AS region_r_name, part.p_size AS part_p_size, part.p_type AS part_p_type, partsupp.ps_supplycost AS partsupp_ps_supplycost, supplier.s_acctbal AS supplier_s_acctbal, nation.n_name AS nation_n_name, supplier.s_name AS supplier_s_name, region.r_regionkey AS region_r_regionkey, nation.n_nationkey AS nation_n_nationkey, supplier.s_suppkey AS supplier_s_suppkey, partsupp.ps_partkey AS partsupp_ps_partkey, part.p_partkey AS part_p_partkey, part.p_mfgr AS part_p_mfgr, supplier.s_address AS supplier_s_address, supplier.s_phone AS supplier_s_phone, supplier.s_comment AS supplier_s_comment FROM part JOIN partsupp JOIN supplier JOIN nation JOIN region WHERE partsupp.ps_partkey=part.p_partkey AND partsupp.ps_suppkey=supplier.s_suppkey AND supplier.s_nationkey=nation.n_nationkey AND nation.n_regionkey=region.r_regionkey
query time: 0.141613111 for i662047096
== start inserting : i662047096, 16000
insert through csv: i662047096, /tmp/d20201118-32331-eh3mr2/i662047096_0.csv, 16000
loading through csv time: 2.439814646 for 16000 records
 INFO  nose::loader::mysqlloader : i144261828 [region.r_name] [region.r_regionkey, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey] â†’ [partsupp.ps_supplycost]  $82 Graph(nodes: partsupp, supplier, nation, region, edges: {partsupp=>#<Set: {partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>})
SELECT DISTINCT region.r_name AS region_r_name, region.r_regionkey AS region_r_regionkey, nation.n_nationkey AS nation_n_nationkey, supplier.s_suppkey AS supplier_s_suppkey, partsupp.ps_partkey AS partsupp_ps_partkey, partsupp.ps_supplycost AS partsupp_ps_supplycost FROM partsupp JOIN supplier JOIN nation JOIN region WHERE partsupp.ps_suppkey=supplier.s_suppkey AND supplier.s_nationkey=nation.n_nationkey AND nation.n_regionkey=region.r_regionkey
query time: 0.040842913 for i144261828
== start inserting : i144261828, 16000
insert through csv: i144261828, /tmp/d20201118-32331-hibdm6/i144261828_0.csv, 16000
loading through csv time: 1.30883563 for 16000 records
 INFO  nose::loader::mysqlloader : i1726533611 [customer.c_mktsegment] [lineitem.l_extendedprice, lineitem.l_discount, orders.o_orderdate, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber] â†’ [orders.o_shippriority, lineitem.l_shipdate]  $98 Graph(nodes: lineitem, orders, customer, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders}>})
SELECT DISTINCT customer.c_mktsegment AS customer_c_mktsegment, lineitem.l_extendedprice AS lineitem_l_extendedprice, lineitem.l_discount AS lineitem_l_discount, orders.o_orderdate AS orders_o_orderdate, customer.c_custkey AS customer_c_custkey, orders.o_orderkey AS orders_o_orderkey, lineitem.l_linenumber AS lineitem_l_linenumber, orders.o_shippriority AS orders_o_shippriority, lineitem.l_shipdate AS lineitem_l_shipdate FROM lineitem JOIN orders JOIN customer WHERE lineitem.l_orderkey=orders.o_orderkey AND orders.o_custkey=customer.c_custkey
query time: 1.462295368 for i1726533611
== start inserting : i1726533611, 2384
insert through csv: i1726533611, /tmp/d20201118-32331-w68v1j/i1726533611_0.csv, 2384
loading through csv time: 0.892281952 for 2384 records
 INFO  nose::loader::mysqlloader : i3435119087 [region.r_name] [nation.n_name, region.r_regionkey, nation.n_nationkey] â†’ []  $52 Graph(nodes: nation, region, edges: {nation=>#<Set: {nation.n_regionkey}>, region=>#<Set: {region.from_nation}>})
SELECT DISTINCT region.r_name AS region_r_name, nation.n_name AS nation_n_name, region.r_regionkey AS region_r_regionkey, nation.n_nationkey AS nation_n_nationkey FROM nation JOIN region WHERE nation.n_regionkey=region.r_regionkey
query time: 0.001582679 for i3435119087
== start inserting : i3435119087, 25
insert through csv: i3435119087, /tmp/d20201118-32331-wt23et/i3435119087_0.csv, 25
loading through csv time: 0.702191039 for 25 records
 INFO  nose::loader::mysqlloader : i2634107645 [nation.n_nationkey] [orders.o_orderdate, lineitem.l_discount, lineitem.l_extendedprice, customer.c_custkey, lineitem.l_linenumber, orders.o_orderkey] â†’ []  $88 Graph(nodes: lineitem, orders, customer, nation, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>})
SELECT DISTINCT nation.n_nationkey AS nation_n_nationkey, orders.o_orderdate AS orders_o_orderdate, lineitem.l_discount AS lineitem_l_discount, lineitem.l_extendedprice AS lineitem_l_extendedprice, customer.c_custkey AS customer_c_custkey, lineitem.l_linenumber AS lineitem_l_linenumber, orders.o_orderkey AS orders_o_orderkey FROM lineitem JOIN orders JOIN customer JOIN nation WHERE lineitem.l_orderkey=orders.o_orderkey AND orders.o_custkey=customer.c_custkey AND customer.c_nationkey=nation.n_nationkey
query time: 0.923370126 for i2634107645
== start inserting : i2634107645, 2384
insert through csv: i2634107645, /tmp/d20201118-32331-qd5gst/i2634107645_0.csv, 2384
loading through csv time: 0.792563887 for 2384 records
 INFO  nose::loader::mysqlloader : i1327449593 [nation.n_name] [lineitem.l_shipdate, nation.n_nationkey, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber] â†’ [lineitem.l_extendedprice, lineitem.l_discount]  $98 Graph(nodes: lineitem, orders, customer, nation, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>})
SELECT DISTINCT nation.n_name AS nation_n_name, lineitem.l_shipdate AS lineitem_l_shipdate, nation.n_nationkey AS nation_n_nationkey, customer.c_custkey AS customer_c_custkey, orders.o_orderkey AS orders_o_orderkey, lineitem.l_linenumber AS lineitem_l_linenumber, lineitem.l_extendedprice AS lineitem_l_extendedprice, lineitem.l_discount AS lineitem_l_discount FROM lineitem JOIN orders JOIN customer JOIN nation WHERE lineitem.l_orderkey=orders.o_orderkey AND orders.o_custkey=customer.c_custkey AND customer.c_nationkey=nation.n_nationkey
query time: 0.875715502 for i1327449593
== start inserting : i1327449593, 2384
insert through csv: i1327449593, /tmp/d20201118-32331-w08j4c/i1327449593_0.csv, 2384
loading through csv time: 0.83036016 for 2384 records
 INFO  nose::loader::mysqlloader : i2386081023 [region.r_name] [nation.n_name, part.p_type, orders.o_orderdate, region.r_regionkey, nation.n_nationkey, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber, partsupp.ps_partkey, part.p_partkey] â†’ [lineitem.l_extendedprice, lineitem.l_discount]  $166 Graph(nodes: part, partsupp, lineitem, orders, customer, nation, region, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey, partsupp.from_lineitem}>, lineitem=>#<Set: {lineitem.l_suppkey, lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>})
SELECT DISTINCT region.r_name AS region_r_name, nation.n_name AS nation_n_name, part.p_type AS part_p_type, orders.o_orderdate AS orders_o_orderdate, region.r_regionkey AS region_r_regionkey, nation.n_nationkey AS nation_n_nationkey, customer.c_custkey AS customer_c_custkey, orders.o_orderkey AS orders_o_orderkey, lineitem.l_linenumber AS lineitem_l_linenumber, partsupp.ps_partkey AS partsupp_ps_partkey, part.p_partkey AS part_p_partkey, lineitem.l_extendedprice AS lineitem_l_extendedprice, lineitem.l_discount AS lineitem_l_discount FROM part JOIN partsupp JOIN lineitem JOIN orders JOIN customer JOIN nation JOIN region WHERE partsupp.ps_partkey=part.p_partkey AND lineitem.l_suppkey=partsupp.ps_partkey AND lineitem.l_orderkey=orders.o_orderkey AND orders.o_custkey=customer.c_custkey AND customer.c_nationkey=nation.n_nationkey AND nation.n_regionkey=region.r_regionkey
query time: 1.662725912 for i2386081023
== start inserting : i2386081023, 2384
insert through csv: i2386081023, /tmp/d20201118-32331-1soeejy/i2386081023_0.csv, 2384
loading through csv time: 0.851934614 for 2384 records
 INFO  nose::loader::mysqlloader : i1400082724 [part.p_name] [orders.o_orderkey, nation.n_name, orders.o_orderdate, part.p_partkey, partsupp.ps_partkey, lineitem.l_linenumber, customer.c_custkey, nation.n_nationkey] â†’ [lineitem.l_extendedprice, lineitem.l_discount, partsupp.ps_supplycost, lineitem.l_quantity]  $156 Graph(nodes: part, partsupp, lineitem, orders, customer, nation, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey, partsupp.from_lineitem}>, lineitem=>#<Set: {lineitem.l_suppkey, lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>})
SELECT DISTINCT part.p_name AS part_p_name, orders.o_orderkey AS orders_o_orderkey, nation.n_name AS nation_n_name, orders.o_orderdate AS orders_o_orderdate, part.p_partkey AS part_p_partkey, partsupp.ps_partkey AS partsupp_ps_partkey, lineitem.l_linenumber AS lineitem_l_linenumber, customer.c_custkey AS customer_c_custkey, nation.n_nationkey AS nation_n_nationkey, lineitem.l_extendedprice AS lineitem_l_extendedprice, lineitem.l_discount AS lineitem_l_discount, partsupp.ps_supplycost AS partsupp_ps_supplycost, lineitem.l_quantity AS lineitem_l_quantity FROM part JOIN partsupp JOIN lineitem JOIN orders JOIN customer JOIN nation WHERE partsupp.ps_partkey=part.p_partkey AND lineitem.l_suppkey=partsupp.ps_partkey AND lineitem.l_orderkey=orders.o_orderkey AND orders.o_custkey=customer.c_custkey AND customer.c_nationkey=nation.n_nationkey
query time: 1.544015834 for i1400082724
== start inserting : i1400082724, 9535
insert through csv: i1400082724, /tmp/d20201118-32331-fo4rmw/i1400082724_0.csv, 9535
loading through csv time: 1.525983685 for 9535 records
 INFO  nose::loader::mysqlloader : i1394347799 [lineitem.l_returnflag] [lineitem.l_extendedprice, lineitem.l_discount, orders.o_orderdate, lineitem.l_linenumber, orders.o_orderkey, customer.c_custkey, nation.n_nationkey] â†’ [customer.c_name, customer.c_acctbal, nation.n_name, customer.c_address, customer.c_phone, customer.c_comment]  $156 Graph(nodes: lineitem, orders, customer, nation, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>})
SELECT DISTINCT lineitem.l_returnflag AS lineitem_l_returnflag, lineitem.l_extendedprice AS lineitem_l_extendedprice, lineitem.l_discount AS lineitem_l_discount, orders.o_orderdate AS orders_o_orderdate, lineitem.l_linenumber AS lineitem_l_linenumber, orders.o_orderkey AS orders_o_orderkey, customer.c_custkey AS customer_c_custkey, nation.n_nationkey AS nation_n_nationkey, customer.c_name AS customer_c_name, customer.c_acctbal AS customer_c_acctbal, nation.n_name AS nation_n_name, customer.c_address AS customer_c_address, customer.c_phone AS customer_c_phone, customer.c_comment AS customer_c_comment FROM lineitem JOIN orders JOIN customer JOIN nation WHERE lineitem.l_orderkey=orders.o_orderkey AND orders.o_custkey=customer.c_custkey AND customer.c_nationkey=nation.n_nationkey
query time: 1.221590629 for i1394347799
== start inserting : i1394347799, 2384
insert through csv: i1394347799, /tmp/d20201118-32331-22z2fg/i1394347799_0.csv, 2384
loading through csv time: 0.805657437 for 2384 records
 INFO  nose::loader::mysqlloader : i1774703822 [nation.n_name] [partsupp.ps_supplycost, partsupp.ps_availqty, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey] â†’ []  $74 Graph(nodes: partsupp, supplier, nation, edges: {partsupp=>#<Set: {partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier}>})
SELECT DISTINCT nation.n_name AS nation_n_name, partsupp.ps_supplycost AS partsupp_ps_supplycost, partsupp.ps_availqty AS partsupp_ps_availqty, nation.n_nationkey AS nation_n_nationkey, supplier.s_suppkey AS supplier_s_suppkey, partsupp.ps_partkey AS partsupp_ps_partkey FROM partsupp JOIN supplier JOIN nation WHERE partsupp.ps_suppkey=supplier.s_suppkey AND supplier.s_nationkey=nation.n_nationkey
query time: 0.047899744 for i1774703822
== start inserting : i1774703822, 16000
insert through csv: i1774703822, /tmp/d20201118-32331-1r3ne42/i1774703822_0.csv, 16000
loading through csv time: 1.278253943 for 16000 records
 INFO  nose::loader::mysqlloader : i369452371 [lineitem.l_shipmode] [lineitem.l_commitdate, lineitem.l_linenumber, orders.o_orderkey] â†’ [orders.o_orderpriority, lineitem.l_shipdate, lineitem.l_receiptdate]  $76 Graph(nodes: lineitem, orders, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem}>})
SELECT DISTINCT lineitem.l_shipmode AS lineitem_l_shipmode, lineitem.l_commitdate AS lineitem_l_commitdate, lineitem.l_linenumber AS lineitem_l_linenumber, orders.o_orderkey AS orders_o_orderkey, orders.o_orderpriority AS orders_o_orderpriority, lineitem.l_shipdate AS lineitem_l_shipdate, lineitem.l_receiptdate AS lineitem_l_receiptdate FROM lineitem JOIN orders WHERE lineitem.l_orderkey=orders.o_orderkey
query time: 1.27548898 for i369452371
== start inserting : i369452371, 120024
insert through csv: i369452371, /tmp/d20201118-32331-16k75am/i369452371_0.csv, 120024
loading through csv time: 3.243483976 for 120024 records
whole loading time: 145.906570709
[33m timestep: 0 ===================================================== [0m
Executing Query: SELECT ps_suppkey.s_acctbal, ps_suppkey.s_name, s_nationkey.n_name, part.p_partkey, part.p_mfgr, ps_suppkey.s_address, ps_suppkey.s_phone, ps_suppkey.s_comment FROM part.from_partsupp.ps_suppkey.s_nationkey.n_regionkey WHERE part.p_size = ? AND part.p_type = ? AND n_regionkey.r_name = ? AND from_partsupp.ps_supplycost = ? ORDER BY ps_suppkey.s_acctbal, s_nationkey.n_name, ps_suppkey.s_name -- Q2_outer
    Executing Plan: [Index lookup i662047096 [region.r_name] [part.p_size, part.p_type, partsupp.ps_supplycost, supplier.s_acctbal, nation.n_name, supplier.s_name, region.r_regionkey, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey, part.p_partkey] â†’ [part.p_mfgr, supplier.s_address, supplier.s_phone, supplier.s_comment]  $184 Graph(nodes: part, partsupp, supplier, nation, region, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey, partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 0.0026702715332365366/1 ]
Executing Query: SELECT max(partsupp.ps_supplycost) FROM partsupp.ps_suppkey.s_nationkey.n_regionkey WHERE n_regionkey.r_name = ? -- Q2_inner
    Executing Plan: [Index lookup i144261828 [region.r_name] [region.r_regionkey, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey] â†’ [partsupp.ps_supplycost]  $82 Graph(nodes: partsupp, supplier, nation, region, edges: {partsupp=>#<Set: {partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 160000.0/1 , Aggregation COUNT([]) SUM([]) AVG([]) MAX([partsupp.ps_supplycost]) GROUP BY([])]
Executing Query: SELECT l_orderkey.o_orderkey, sum(lineitem.l_extendedprice), sum(lineitem.l_discount), l_orderkey.o_orderdate, l_orderkey.o_shippriority FROM lineitem.l_orderkey.o_custkey WHERE o_custkey.c_mktsegment = ? AND l_orderkey.o_orderdate < ? AND lineitem.l_shipdate > ? ORDER BY lineitem.l_extendedprice, lineitem.l_discount, l_orderkey.o_orderdate GROUP BY l_orderkey.o_orderkey, l_orderkey.o_orderdate, l_orderkey.o_shippriority -- Q3
    Executing Plan: [Index lookup i1726533611 [customer.c_mktsegment] [lineitem.l_extendedprice, lineitem.l_discount, orders.o_orderdate, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber] â†’ [orders.o_shippriority, lineitem.l_shipdate]  $98 Graph(nodes: lineitem, orders, customer, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders}>}) * 1200000.0/1 , Filter [] orders.o_orderdate , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([orders.o_orderkey, orders.o_orderdate, orders.o_shippriority])]
Executing Query: SELECT c_nationkey.n_name, sum(lineitem.l_extendedprice), sum(lineitem.l_discount) FROM lineitem.l_orderkey.o_custkey.c_nationkey.n_regionkey WHERE n_regionkey.r_name = ? AND l_orderkey.o_orderdate >= ? AND l_orderkey.o_orderdate < ? ORDER BY lineitem.l_extendedprice, lineitem.l_discount GROUP BY c_nationkey.n_name -- Q5
    Executing Plan: [Index lookup i3435119087 [region.r_name] [nation.n_name, region.r_regionkey, nation.n_nationkey] â†’ []  $52 Graph(nodes: nation, region, edges: {nation=>#<Set: {nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 5.0/1 , Index lookup i2634107645 [nation.n_nationkey] [orders.o_orderdate, lineitem.l_discount, lineitem.l_extendedprice, customer.c_custkey, lineitem.l_linenumber, orders.o_orderkey] â†’ []  $88 Graph(nodes: lineitem, orders, customer, nation, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>}) * 120000.0/5.0 , Sort [lineitem.l_extendedprice, lineitem.l_discount], Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([nation.n_name])]
Executing Query: SELECT c_nationkey.n_name, lineitem.l_shipdate, sum(lineitem.l_extendedprice), sum(lineitem.l_discount) FROM lineitem.l_orderkey.o_custkey.c_nationkey WHERE c_nationkey.n_name = ? AND lineitem.l_shipdate < ? AND lineitem.l_shipdate > ? ORDER BY c_nationkey.n_name, lineitem.l_shipdate GROUP BY c_nationkey.n_name, lineitem.l_shipdate -- Q7
    Executing Plan: [Index lookup i1327449593 [nation.n_name] [lineitem.l_shipdate, nation.n_nationkey, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber] â†’ [lineitem.l_extendedprice, lineitem.l_discount]  $98 Graph(nodes: lineitem, orders, customer, nation, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>}) * 24000.0/1 , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([nation.n_name, lineitem.l_shipdate])]
Executing Query: SELECT l_orderkey.o_orderdate, sum(from_lineitem.l_extendedprice), sum(from_lineitem.l_discount) FROM part.from_partsupp.from_lineitem.l_orderkey.o_custkey.c_nationkey.n_regionkey WHERE c_nationkey.n_name = ? AND n_regionkey.r_name = ? AND l_orderkey.o_orderdate < ? AND l_orderkey.o_orderdate > ? AND part.p_type = ? ORDER BY l_orderkey.o_orderdate GROUP BY l_orderkey.o_orderdate -- Q8
    Executing Plan: [Index lookup i2386081023 [region.r_name] [nation.n_name, part.p_type, orders.o_orderdate, region.r_regionkey, nation.n_nationkey, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber, partsupp.ps_partkey, part.p_partkey] â†’ [lineitem.l_extendedprice, lineitem.l_discount]  $166 Graph(nodes: part, partsupp, lineitem, orders, customer, nation, region, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey, partsupp.from_lineitem}>, lineitem=>#<Set: {lineitem.l_suppkey, lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 32.0/1 , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([orders.o_orderdate])]
Executing Query: SELECT c_nationkey.n_name, l_orderkey.o_orderdate, sum(from_lineitem.l_extendedprice), sum(from_lineitem.l_discount), sum(from_partsupp.ps_supplycost), sum(from_lineitem.l_quantity) FROM part.from_partsupp.from_lineitem.l_orderkey.o_custkey.c_nationkey WHERE part.p_name = ? AND l_orderkey.o_orderkey = ? ORDER BY c_nationkey.n_name, l_orderkey.o_orderdate GROUP BY c_nationkey.n_name, l_orderkey.o_orderdate -- Q9
    Executing Plan: [Index lookup i1400082724 [part.p_name] [orders.o_orderkey, nation.n_name, orders.o_orderdate, part.p_partkey, partsupp.ps_partkey, lineitem.l_linenumber, customer.c_custkey, nation.n_nationkey] â†’ [lineitem.l_extendedprice, lineitem.l_discount, partsupp.ps_supplycost, lineitem.l_quantity]  $156 Graph(nodes: part, partsupp, lineitem, orders, customer, nation, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey, partsupp.from_lineitem}>, lineitem=>#<Set: {lineitem.l_suppkey, lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>}) * 2.0000300004500068e-05/1 , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount, partsupp.ps_supplycost, lineitem.l_quantity]) AVG([]) MAX([]) GROUP BY([nation.n_name, orders.o_orderdate])]
Executing Query: SELECT o_custkey.c_custkey, o_custkey.c_name, sum(lineitem.l_extendedprice), sum(lineitem.l_discount), o_custkey.c_acctbal, c_nationkey.n_name, o_custkey.c_address, o_custkey.c_phone, o_custkey.c_comment FROM lineitem.l_orderkey.o_custkey.c_nationkey WHERE l_orderkey.o_orderdate >= ? AND l_orderkey.o_orderdate < ? AND lineitem.l_returnflag = ? ORDER BY lineitem.l_extendedprice, lineitem.l_discount GROUP BY o_custkey.c_custkey, o_custkey.c_name, o_custkey.c_acctbal, o_custkey.c_phone, c_nationkey.n_name, o_custkey.c_address, o_custkey.c_comment -- Q10
    Executing Plan: [Index lookup i1394347799 [lineitem.l_returnflag] [lineitem.l_extendedprice, lineitem.l_discount, orders.o_orderdate, lineitem.l_linenumber, orders.o_orderkey, customer.c_custkey, nation.n_nationkey] â†’ [customer.c_name, customer.c_acctbal, nation.n_name, customer.c_address, customer.c_phone, customer.c_comment]  $156 Graph(nodes: lineitem, orders, customer, nation, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>}) * 2000000.0/1 , Filter [] orders.o_orderdate , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment])]
Executing Query: SELECT sum(partsupp.ps_supplycost), sum(partsupp.ps_availqty) FROM partsupp.ps_suppkey.s_nationkey WHERE s_nationkey.n_name = ? AND partsupp.ps_supplycost = ? AND partsupp.ps_availqty = ? ORDER BY partsupp.ps_supplycost, partsupp.ps_availqty GROUP BY partsupp.ps_partkey -- Q11_outer
    Executing Plan: [Index lookup i1774703822 [nation.n_name] [partsupp.ps_supplycost, partsupp.ps_availqty, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey] â†’ []  $74 Graph(nodes: partsupp, supplier, nation, edges: {partsupp=>#<Set: {partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier}>}) * 0.03204325839883844/1 , Aggregation COUNT([]) SUM([partsupp.ps_supplycost, partsupp.ps_availqty]) AVG([]) MAX([]) GROUP BY([partsupp.ps_partkey])]
Executing Query: SELECT sum(partsupp.ps_supplycost), sum(partsupp.ps_availqty) FROM partsupp.ps_suppkey.s_nationkey WHERE s_nationkey.n_name = ? -- Q11_inner
    Executing Plan: [Index lookup i1774703822 [nation.n_name] [partsupp.ps_supplycost, partsupp.ps_availqty, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey] â†’ []  $74 Graph(nodes: partsupp, supplier, nation, edges: {partsupp=>#<Set: {partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier}>}) * 32000.0/1 , Aggregation COUNT([]) SUM([partsupp.ps_supplycost, partsupp.ps_availqty]) AVG([]) MAX([]) GROUP BY([])]
Executing Query: SELECT lineitem.l_shipmode, sum(l_orderkey.o_orderpriority) FROM lineitem.l_orderkey WHERE lineitem.l_shipmode = ? AND lineitem.l_commitdate < ? AND lineitem.l_commitdate > ? AND lineitem.l_shipdate < ? AND lineitem.l_receiptdate > ? AND lineitem.l_receiptdate >= ? AND lineitem.l_receiptdate < ? ORDER BY lineitem.l_shipmode GROUP BY lineitem.l_shipmode -- Q12
    Executing Plan: [Index lookup i369452371 [lineitem.l_shipmode] [lineitem.l_commitdate, lineitem.l_linenumber, orders.o_orderkey] â†’ [orders.o_orderpriority, lineitem.l_shipdate, lineitem.l_receiptdate]  $76 Graph(nodes: lineitem, orders, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem}>}) * 85714.28571428572/1 , Aggregation COUNT([]) SUM([orders.o_orderpriority]) AVG([]) MAX([]) GROUP BY([lineitem.l_shipmode])]
Executing INSERT INTO lineitem SET l_linenumber=?, l_quantity=?, l_extendedprice=?, l_discount=?, l_tax = ?, l_returnflag=?, l_linestatus=?, l_shipdate=?, l_commitdate=?, l_receiptdate=?, l_shipmode=?, l_comment=?, dummy=? AND CONNECT TO l_partkey(?), l_orderkey(?) -- lineitem_insert
Executing INSERT INTO orders SET o_orderkey=?, o_orderstatus=?, o_totalprice=?, o_orderdate=?, o_orderpriority=?, o_clerk=?, o_shippriority=?, o_comment=?, dummy=? AND CONNECT TO from_lineitem(?), o_custkey(?) -- orders_insert
cleanup
[33m timestep: 1 ===================================================== [0m
Executing Query: SELECT ps_suppkey.s_acctbal, ps_suppkey.s_name, s_nationkey.n_name, part.p_partkey, part.p_mfgr, ps_suppkey.s_address, ps_suppkey.s_phone, ps_suppkey.s_comment FROM part.from_partsupp.ps_suppkey.s_nationkey.n_regionkey WHERE part.p_size = ? AND part.p_type = ? AND n_regionkey.r_name = ? AND from_partsupp.ps_supplycost = ? ORDER BY ps_suppkey.s_acctbal, s_nationkey.n_name, ps_suppkey.s_name -- Q2_outer
    Executing Plan: [Index lookup i662047096 [region.r_name] [part.p_size, part.p_type, partsupp.ps_supplycost, supplier.s_acctbal, nation.n_name, supplier.s_name, region.r_regionkey, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey, part.p_partkey] â†’ [part.p_mfgr, supplier.s_address, supplier.s_phone, supplier.s_comment]  $184 Graph(nodes: part, partsupp, supplier, nation, region, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey, partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 0.0026702715332365366/1 ]
Executing Query: SELECT max(partsupp.ps_supplycost) FROM partsupp.ps_suppkey.s_nationkey.n_regionkey WHERE n_regionkey.r_name = ? -- Q2_inner
    Executing Plan: [Index lookup i144261828 [region.r_name] [region.r_regionkey, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey] â†’ [partsupp.ps_supplycost]  $82 Graph(nodes: partsupp, supplier, nation, region, edges: {partsupp=>#<Set: {partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 160000.0/1 , Aggregation COUNT([]) SUM([]) AVG([]) MAX([partsupp.ps_supplycost]) GROUP BY([])]
Executing Query: SELECT l_orderkey.o_orderkey, sum(lineitem.l_extendedprice), sum(lineitem.l_discount), l_orderkey.o_orderdate, l_orderkey.o_shippriority FROM lineitem.l_orderkey.o_custkey WHERE o_custkey.c_mktsegment = ? AND l_orderkey.o_orderdate < ? AND lineitem.l_shipdate > ? ORDER BY lineitem.l_extendedprice, lineitem.l_discount, l_orderkey.o_orderdate GROUP BY l_orderkey.o_orderkey, l_orderkey.o_orderdate, l_orderkey.o_shippriority -- Q3
    Executing Plan: [Index lookup i1726533611 [customer.c_mktsegment] [lineitem.l_extendedprice, lineitem.l_discount, orders.o_orderdate, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber] â†’ [orders.o_shippriority, lineitem.l_shipdate]  $98 Graph(nodes: lineitem, orders, customer, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders}>}) * 1200000.0/1 , Filter [] orders.o_orderdate , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([orders.o_orderkey, orders.o_orderdate, orders.o_shippriority])]
Executing Query: SELECT c_nationkey.n_name, sum(lineitem.l_extendedprice), sum(lineitem.l_discount) FROM lineitem.l_orderkey.o_custkey.c_nationkey.n_regionkey WHERE n_regionkey.r_name = ? AND l_orderkey.o_orderdate >= ? AND l_orderkey.o_orderdate < ? ORDER BY lineitem.l_extendedprice, lineitem.l_discount GROUP BY c_nationkey.n_name -- Q5
    Executing Plan: [Index lookup i3435119087 [region.r_name] [nation.n_name, region.r_regionkey, nation.n_nationkey] â†’ []  $52 Graph(nodes: nation, region, edges: {nation=>#<Set: {nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 5.0/1 , Index lookup i2634107645 [nation.n_nationkey] [orders.o_orderdate, lineitem.l_discount, lineitem.l_extendedprice, customer.c_custkey, lineitem.l_linenumber, orders.o_orderkey] â†’ []  $88 Graph(nodes: lineitem, orders, customer, nation, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>}) * 120000.0/5.0 , Sort [lineitem.l_extendedprice, lineitem.l_discount], Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([nation.n_name])]
Executing Query: SELECT c_nationkey.n_name, lineitem.l_shipdate, sum(lineitem.l_extendedprice), sum(lineitem.l_discount) FROM lineitem.l_orderkey.o_custkey.c_nationkey WHERE c_nationkey.n_name = ? AND lineitem.l_shipdate < ? AND lineitem.l_shipdate > ? ORDER BY c_nationkey.n_name, lineitem.l_shipdate GROUP BY c_nationkey.n_name, lineitem.l_shipdate -- Q7
    Executing Plan: [Index lookup i1327449593 [nation.n_name] [lineitem.l_shipdate, nation.n_nationkey, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber] â†’ [lineitem.l_extendedprice, lineitem.l_discount]  $98 Graph(nodes: lineitem, orders, customer, nation, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>}) * 24000.0/1 , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([nation.n_name, lineitem.l_shipdate])]
Executing Query: SELECT l_orderkey.o_orderdate, sum(from_lineitem.l_extendedprice), sum(from_lineitem.l_discount) FROM part.from_partsupp.from_lineitem.l_orderkey.o_custkey.c_nationkey.n_regionkey WHERE c_nationkey.n_name = ? AND n_regionkey.r_name = ? AND l_orderkey.o_orderdate < ? AND l_orderkey.o_orderdate > ? AND part.p_type = ? ORDER BY l_orderkey.o_orderdate GROUP BY l_orderkey.o_orderdate -- Q8
    Executing Plan: [Index lookup i2386081023 [region.r_name] [nation.n_name, part.p_type, orders.o_orderdate, region.r_regionkey, nation.n_nationkey, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber, partsupp.ps_partkey, part.p_partkey] â†’ [lineitem.l_extendedprice, lineitem.l_discount]  $166 Graph(nodes: part, partsupp, lineitem, orders, customer, nation, region, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey, partsupp.from_lineitem}>, lineitem=>#<Set: {lineitem.l_suppkey, lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 32.0/1 , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([orders.o_orderdate])]
Executing Query: SELECT c_nationkey.n_name, l_orderkey.o_orderdate, sum(from_lineitem.l_extendedprice), sum(from_lineitem.l_discount), sum(from_partsupp.ps_supplycost), sum(from_lineitem.l_quantity) FROM part.from_partsupp.from_lineitem.l_orderkey.o_custkey.c_nationkey WHERE part.p_name = ? AND l_orderkey.o_orderkey = ? ORDER BY c_nationkey.n_name, l_orderkey.o_orderdate GROUP BY c_nationkey.n_name, l_orderkey.o_orderdate -- Q9
    Executing Plan: [Index lookup i1400082724 [part.p_name] [orders.o_orderkey, nation.n_name, orders.o_orderdate, part.p_partkey, partsupp.ps_partkey, lineitem.l_linenumber, customer.c_custkey, nation.n_nationkey] â†’ [lineitem.l_extendedprice, lineitem.l_discount, partsupp.ps_supplycost, lineitem.l_quantity]  $156 Graph(nodes: part, partsupp, lineitem, orders, customer, nation, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey, partsupp.from_lineitem}>, lineitem=>#<Set: {lineitem.l_suppkey, lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>}) * 2.0000300004500068e-05/1 , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount, partsupp.ps_supplycost, lineitem.l_quantity]) AVG([]) MAX([]) GROUP BY([nation.n_name, orders.o_orderdate])]
Executing Query: SELECT o_custkey.c_custkey, o_custkey.c_name, sum(lineitem.l_extendedprice), sum(lineitem.l_discount), o_custkey.c_acctbal, c_nationkey.n_name, o_custkey.c_address, o_custkey.c_phone, o_custkey.c_comment FROM lineitem.l_orderkey.o_custkey.c_nationkey WHERE l_orderkey.o_orderdate >= ? AND l_orderkey.o_orderdate < ? AND lineitem.l_returnflag = ? ORDER BY lineitem.l_extendedprice, lineitem.l_discount GROUP BY o_custkey.c_custkey, o_custkey.c_name, o_custkey.c_acctbal, o_custkey.c_phone, c_nationkey.n_name, o_custkey.c_address, o_custkey.c_comment -- Q10
    Executing Plan: [Index lookup i1394347799 [lineitem.l_returnflag] [lineitem.l_extendedprice, lineitem.l_discount, orders.o_orderdate, lineitem.l_linenumber, orders.o_orderkey, customer.c_custkey, nation.n_nationkey] â†’ [customer.c_name, customer.c_acctbal, nation.n_name, customer.c_address, customer.c_phone, customer.c_comment]  $156 Graph(nodes: lineitem, orders, customer, nation, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>}) * 2000000.0/1 , Filter [] orders.o_orderdate , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment])]
Executing Query: SELECT sum(partsupp.ps_supplycost), sum(partsupp.ps_availqty) FROM partsupp.ps_suppkey.s_nationkey WHERE s_nationkey.n_name = ? AND partsupp.ps_supplycost = ? AND partsupp.ps_availqty = ? ORDER BY partsupp.ps_supplycost, partsupp.ps_availqty GROUP BY partsupp.ps_partkey -- Q11_outer
    Executing Plan: [Index lookup i1774703822 [nation.n_name] [partsupp.ps_supplycost, partsupp.ps_availqty, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey] â†’ []  $74 Graph(nodes: partsupp, supplier, nation, edges: {partsupp=>#<Set: {partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier}>}) * 0.03204325839883844/1 , Aggregation COUNT([]) SUM([partsupp.ps_supplycost, partsupp.ps_availqty]) AVG([]) MAX([]) GROUP BY([partsupp.ps_partkey])]
Executing Query: SELECT sum(partsupp.ps_supplycost), sum(partsupp.ps_availqty) FROM partsupp.ps_suppkey.s_nationkey WHERE s_nationkey.n_name = ? -- Q11_inner
    Executing Plan: [Index lookup i1774703822 [nation.n_name] [partsupp.ps_supplycost, partsupp.ps_availqty, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey] â†’ []  $74 Graph(nodes: partsupp, supplier, nation, edges: {partsupp=>#<Set: {partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier}>}) * 32000.0/1 , Aggregation COUNT([]) SUM([partsupp.ps_supplycost, partsupp.ps_availqty]) AVG([]) MAX([]) GROUP BY([])]
Executing Query: SELECT lineitem.l_shipmode, sum(l_orderkey.o_orderpriority) FROM lineitem.l_orderkey WHERE lineitem.l_shipmode = ? AND lineitem.l_commitdate < ? AND lineitem.l_commitdate > ? AND lineitem.l_shipdate < ? AND lineitem.l_receiptdate > ? AND lineitem.l_receiptdate >= ? AND lineitem.l_receiptdate < ? ORDER BY lineitem.l_shipmode GROUP BY lineitem.l_shipmode -- Q12
    Executing Plan: [Index lookup i369452371 [lineitem.l_shipmode] [lineitem.l_commitdate, lineitem.l_linenumber, orders.o_orderkey] â†’ [orders.o_orderpriority, lineitem.l_shipdate, lineitem.l_receiptdate]  $76 Graph(nodes: lineitem, orders, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem}>}) * 85714.28571428572/1 , Aggregation COUNT([]) SUM([orders.o_orderpriority]) AVG([]) MAX([]) GROUP BY([lineitem.l_shipmode])]
Executing INSERT INTO lineitem SET l_linenumber=?, l_quantity=?, l_extendedprice=?, l_discount=?, l_tax = ?, l_returnflag=?, l_linestatus=?, l_shipdate=?, l_commitdate=?, l_receiptdate=?, l_shipmode=?, l_comment=?, dummy=? AND CONNECT TO l_partkey(?), l_orderkey(?) -- lineitem_insert
Executing INSERT INTO orders SET o_orderkey=?, o_orderstatus=?, o_totalprice=?, o_orderdate=?, o_orderpriority=?, o_clerk=?, o_shippriority=?, o_comment=?, dummy=? AND CONNECT TO from_lineitem(?), o_custkey(?) -- orders_insert
cleanup
[33m timestep: 2 ===================================================== [0m
i3675016685 is created before query processing
i2588666510 is created before query processing
i3670917302 is created before query processing
Executing Query: SELECT ps_suppkey.s_acctbal, ps_suppkey.s_name, s_nationkey.n_name, part.p_partkey, part.p_mfgr, ps_suppkey.s_address, ps_suppkey.s_phone, ps_suppkey.s_comment FROM part.from_partsupp.ps_suppkey.s_nationkey.n_regionkey WHERE part.p_size = ? AND part.p_type = ? AND n_regionkey.r_name = ? AND from_partsupp.ps_supplycost = ? ORDER BY ps_suppkey.s_acctbal, s_nationkey.n_name, ps_suppkey.s_name -- Q2_outer
    Executing Plan: [Index lookup i662047096 [region.r_name] [part.p_size, part.p_type, partsupp.ps_supplycost, supplier.s_acctbal, nation.n_name, supplier.s_name, region.r_regionkey, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey, part.p_partkey] â†’ [part.p_mfgr, supplier.s_address, supplier.s_phone, supplier.s_comment]  $184 Graph(nodes: part, partsupp, supplier, nation, region, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey, partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 0.0026702715332365366/1 ]
Executing Query: SELECT max(partsupp.ps_supplycost) FROM partsupp.ps_suppkey.s_nationkey.n_regionkey WHERE n_regionkey.r_name = ? -- Q2_inner
    Executing Plan: [Index lookup i144261828 [region.r_name] [region.r_regionkey, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey] â†’ [partsupp.ps_supplycost]  $82 Graph(nodes: partsupp, supplier, nation, region, edges: {partsupp=>#<Set: {partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 160000.0/1 , Aggregation COUNT([]) SUM([]) AVG([]) MAX([partsupp.ps_supplycost]) GROUP BY([])]
[36m migrate from: [0m
  Index lookup i3435119087 [region.r_name] [nation.n_name, region.r_regionkey, nation.n_nationkey] â†’ []  $52 Graph(nodes: nation, region, edges: {nation=>#<Set: {nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 5.0/1 
[36m migrate from: [0m
  Index lookup i2634107645 [nation.n_nationkey] [orders.o_orderdate, lineitem.l_discount, lineitem.l_extendedprice, customer.c_custkey, lineitem.l_linenumber, orders.o_orderkey] â†’ []  $88 Graph(nodes: lineitem, orders, customer, nation, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>}) * 120000.0/5.0 
  Index lookup i2386081023 [region.r_name] [nation.n_name, part.p_type, orders.o_orderdate, region.r_regionkey, nation.n_nationkey, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber, partsupp.ps_partkey, part.p_partkey] â†’ [lineitem.l_extendedprice, lineitem.l_discount]  $166 Graph(nodes: part, partsupp, lineitem, orders, customer, nation, region, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey, partsupp.from_lineitem}>, lineitem=>#<Set: {lineitem.l_suppkey, lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 32.0/1 
[36m migrate from: [0m
  Sort [lineitem.l_extendedprice, lineitem.l_discount]
  Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([orders.o_orderdate])
  Index lookup i1400082724 [part.p_name] [orders.o_orderkey, nation.n_name, orders.o_orderdate, part.p_partkey, partsupp.ps_partkey, lineitem.l_linenumber, customer.c_custkey, nation.n_nationkey] â†’ [lineitem.l_extendedprice, lineitem.l_discount, partsupp.ps_supplycost, lineitem.l_quantity]  $156 Graph(nodes: part, partsupp, lineitem, orders, customer, nation, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey, partsupp.from_lineitem}>, lineitem=>#<Set: {lineitem.l_suppkey, lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>}) * 2.0000300004500068e-05/1 
  Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([nation.n_name])
[36m to: [0m
  Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount, partsupp.ps_supplycost, lineitem.l_quantity]) AVG([]) MAX([]) GROUP BY([nation.n_name, orders.o_orderdate])
[36m to: [0m
  Index lookup i3675016685 [region.r_name] [lineitem.l_extendedprice, lineitem.l_discount, orders.o_orderdate, region.r_regionkey, nation.n_nationkey, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber] â†’ [nation.n_name]  $124 Graph(nodes: lineitem, orders, customer, nation, region, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 1200000.0/1 
[36m to: [0m
  Index lookup i3675016685 [region.r_name] [lineitem.l_extendedprice, lineitem.l_discount, orders.o_orderdate, region.r_regionkey, nation.n_nationkey, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber] â†’ [nation.n_name]  $124 Graph(nodes: lineitem, orders, customer, nation, region, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 1200000.0/1 
  Filter [nation.n_name] orders.o_orderdate 
  Index lookup i2588666510 [part.p_name] [partsupp.ps_partkey, part.p_partkey] â†’ []  $42 Graph(nodes: partsupp, part, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey}>}) * 10.000150002250034/1 
  Filter [] orders.o_orderdate 
  Index lookup i1891546182 [lineitem.l_linenumber] [partsupp.ps_partkey, part.p_partkey] â†’ [part.p_type, lineitem.l_extendedprice, lineitem.l_discount]  $74 Graph(nodes: part, partsupp, lineitem, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey, partsupp.from_lineitem}>, lineitem=>#<Set: {lineitem.l_suppkey}>}) * 4800.0/4800.0 
  Index lookup i3670917302 [partsupp.ps_partkey] [nation.n_name, orders.o_orderdate, customer.c_custkey, lineitem.l_linenumber, nation.n_nationkey, orders.o_orderkey] â†’ [lineitem.l_extendedprice, lineitem.l_discount, partsupp.ps_supplycost, lineitem.l_quantity]  $130 Graph(nodes: partsupp, lineitem, orders, customer, nation, edges: {partsupp=>#<Set: {partsupp.from_lineitem}>, lineitem=>#<Set: {lineitem.l_suppkey, lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>}) * 0.0002000030000450007/10.000150002250034 
  Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([nation.n_name])
  Filter [part.p_type]  
  Filter [orders.o_orderkey]  
  Sort [orders.o_orderdate]
  Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount, partsupp.ps_supplycost, lineitem.l_quantity]) AVG([]) MAX([]) GROUP BY([nation.n_name, orders.o_orderdate])
  Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([orders.o_orderdate])
===== creating index: i3675016685 for the migration
===== creating index: i3675016685 for the migration
collected data size for i3675016685 is 2595
collected data size for i3675016685 is 2595
== start inserting : i3675016685, 2595
== start inserting : i3675016685, 2595
===== creating index: i2588666510 for the migration
collected data size for i2588666510 is 10000
== start inserting : i2588666510, 10000
insert through csv: i3675016685, /tmp/d20201118-6934-1nglrhi/i3675016685_0.csv, 2595
insert through csv: i3675016685, /tmp/d20201118-6934-1uezeko/i3675016685_0.csv, 2595
insert through csv: i2588666510, /tmp/d20201118-6934-1fkv9tr/i2588666510_0.csv, 10000
Executing Query: SELECT l_orderkey.o_orderkey, sum(lineitem.l_extendedprice), sum(lineitem.l_discount), l_orderkey.o_orderdate, l_orderkey.o_shippriority FROM lineitem.l_orderkey.o_custkey WHERE o_custkey.c_mktsegment = ? AND l_orderkey.o_orderdate < ? AND lineitem.l_shipdate > ? ORDER BY lineitem.l_extendedprice, lineitem.l_discount, l_orderkey.o_orderdate GROUP BY l_orderkey.o_orderkey, l_orderkey.o_orderdate, l_orderkey.o_shippriority -- Q3
    Executing Plan: [Index lookup i1726533611 [customer.c_mktsegment] [lineitem.l_extendedprice, lineitem.l_discount, orders.o_orderdate, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber] â†’ [orders.o_shippriority, lineitem.l_shipdate]  $98 Graph(nodes: lineitem, orders, customer, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders}>}) * 1200000.0/1 , Filter [] orders.o_orderdate , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([orders.o_orderkey, orders.o_orderdate, orders.o_shippriority])]
loading through csv time: 1.374062501 for 2595 records
===== creation done: i3675016685 for the migration
loading through csv time: 1.506547157 for 2595 records
===== creation done: i3675016685 for the migration
loading through csv time: 1.298590736 for 10000 records
===== creation done: i2588666510 for the migration
===== creating index: i3670917302 for the migration
collected data size for i3670917302 is 10000
== start inserting : i3670917302, 10000
insert through csv: i3670917302, /tmp/d20201118-6934-1cp6v5r/i3670917302_0.csv, 10000
Executing Query: SELECT c_nationkey.n_name, sum(lineitem.l_extendedprice), sum(lineitem.l_discount) FROM lineitem.l_orderkey.o_custkey.c_nationkey.n_regionkey WHERE n_regionkey.r_name = ? AND l_orderkey.o_orderdate >= ? AND l_orderkey.o_orderdate < ? ORDER BY lineitem.l_extendedprice, lineitem.l_discount GROUP BY c_nationkey.n_name -- Q5
    Executing Plan: [Index lookup i3435119087 [region.r_name] [nation.n_name, region.r_regionkey, nation.n_nationkey] â†’ []  $52 Graph(nodes: nation, region, edges: {nation=>#<Set: {nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 5.0/1 , Index lookup i2634107645 [nation.n_nationkey] [orders.o_orderdate, lineitem.l_discount, lineitem.l_extendedprice, customer.c_custkey, lineitem.l_linenumber, orders.o_orderkey] â†’ []  $88 Graph(nodes: lineitem, orders, customer, nation, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>}) * 120000.0/5.0 , Sort [lineitem.l_extendedprice, lineitem.l_discount], Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([nation.n_name])]
Executing Query: SELECT c_nationkey.n_name, lineitem.l_shipdate, sum(lineitem.l_extendedprice), sum(lineitem.l_discount) FROM lineitem.l_orderkey.o_custkey.c_nationkey WHERE c_nationkey.n_name = ? AND lineitem.l_shipdate < ? AND lineitem.l_shipdate > ? ORDER BY c_nationkey.n_name, lineitem.l_shipdate GROUP BY c_nationkey.n_name, lineitem.l_shipdate -- Q7
    Executing Plan: [Index lookup i1327449593 [nation.n_name] [lineitem.l_shipdate, nation.n_nationkey, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber] â†’ [lineitem.l_extendedprice, lineitem.l_discount]  $98 Graph(nodes: lineitem, orders, customer, nation, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>}) * 24000.0/1 , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([nation.n_name, lineitem.l_shipdate])]
Executing Query: SELECT l_orderkey.o_orderdate, sum(from_lineitem.l_extendedprice), sum(from_lineitem.l_discount) FROM part.from_partsupp.from_lineitem.l_orderkey.o_custkey.c_nationkey.n_regionkey WHERE c_nationkey.n_name = ? AND n_regionkey.r_name = ? AND l_orderkey.o_orderdate < ? AND l_orderkey.o_orderdate > ? AND part.p_type = ? ORDER BY l_orderkey.o_orderdate GROUP BY l_orderkey.o_orderdate -- Q8
    Executing Plan: [Index lookup i2386081023 [region.r_name] [nation.n_name, part.p_type, orders.o_orderdate, region.r_regionkey, nation.n_nationkey, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber, partsupp.ps_partkey, part.p_partkey] â†’ [lineitem.l_extendedprice, lineitem.l_discount]  $166 Graph(nodes: part, partsupp, lineitem, orders, customer, nation, region, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey, partsupp.from_lineitem}>, lineitem=>#<Set: {lineitem.l_suppkey, lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 32.0/1 , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([orders.o_orderdate])]
Executing Query: SELECT c_nationkey.n_name, l_orderkey.o_orderdate, sum(from_lineitem.l_extendedprice), sum(from_lineitem.l_discount), sum(from_partsupp.ps_supplycost), sum(from_lineitem.l_quantity) FROM part.from_partsupp.from_lineitem.l_orderkey.o_custkey.c_nationkey WHERE part.p_name = ? AND l_orderkey.o_orderkey = ? ORDER BY c_nationkey.n_name, l_orderkey.o_orderdate GROUP BY c_nationkey.n_name, l_orderkey.o_orderdate -- Q9
    Executing Plan: [Index lookup i1400082724 [part.p_name] [orders.o_orderkey, nation.n_name, orders.o_orderdate, part.p_partkey, partsupp.ps_partkey, lineitem.l_linenumber, customer.c_custkey, nation.n_nationkey] â†’ [lineitem.l_extendedprice, lineitem.l_discount, partsupp.ps_supplycost, lineitem.l_quantity]  $156 Graph(nodes: part, partsupp, lineitem, orders, customer, nation, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey, partsupp.from_lineitem}>, lineitem=>#<Set: {lineitem.l_suppkey, lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>}) * 2.0000300004500068e-05/1 , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount, partsupp.ps_supplycost, lineitem.l_quantity]) AVG([]) MAX([]) GROUP BY([nation.n_name, orders.o_orderdate])]
Executing Query: SELECT o_custkey.c_custkey, o_custkey.c_name, sum(lineitem.l_extendedprice), sum(lineitem.l_discount), o_custkey.c_acctbal, c_nationkey.n_name, o_custkey.c_address, o_custkey.c_phone, o_custkey.c_comment FROM lineitem.l_orderkey.o_custkey.c_nationkey WHERE l_orderkey.o_orderdate >= ? AND l_orderkey.o_orderdate < ? AND lineitem.l_returnflag = ? ORDER BY lineitem.l_extendedprice, lineitem.l_discount GROUP BY o_custkey.c_custkey, o_custkey.c_name, o_custkey.c_acctbal, o_custkey.c_phone, c_nationkey.n_name, o_custkey.c_address, o_custkey.c_comment -- Q10
    Executing Plan: [Index lookup i1394347799 [lineitem.l_returnflag] [lineitem.l_extendedprice, lineitem.l_discount, orders.o_orderdate, lineitem.l_linenumber, orders.o_orderkey, customer.c_custkey, nation.n_nationkey] â†’ [customer.c_name, customer.c_acctbal, nation.n_name, customer.c_address, customer.c_phone, customer.c_comment]  $156 Graph(nodes: lineitem, orders, customer, nation, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>}) * 2000000.0/1 , Filter [] orders.o_orderdate , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment])]
loading through csv time: 1.678564657 for 10000 records
===== creation done: i3670917302 for the migration
Executing Query: SELECT sum(partsupp.ps_supplycost), sum(partsupp.ps_availqty) FROM partsupp.ps_suppkey.s_nationkey WHERE s_nationkey.n_name = ? AND partsupp.ps_supplycost = ? AND partsupp.ps_availqty = ? ORDER BY partsupp.ps_supplycost, partsupp.ps_availqty GROUP BY partsupp.ps_partkey -- Q11_outer
    Executing Plan: [Index lookup i1774703822 [nation.n_name] [partsupp.ps_supplycost, partsupp.ps_availqty, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey] â†’ []  $74 Graph(nodes: partsupp, supplier, nation, edges: {partsupp=>#<Set: {partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier}>}) * 0.03204325839883844/1 , Aggregation COUNT([]) SUM([partsupp.ps_supplycost, partsupp.ps_availqty]) AVG([]) MAX([]) GROUP BY([partsupp.ps_partkey])]
Executing Query: SELECT sum(partsupp.ps_supplycost), sum(partsupp.ps_availqty) FROM partsupp.ps_suppkey.s_nationkey WHERE s_nationkey.n_name = ? -- Q11_inner
    Executing Plan: [Index lookup i1774703822 [nation.n_name] [partsupp.ps_supplycost, partsupp.ps_availqty, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey] â†’ []  $74 Graph(nodes: partsupp, supplier, nation, edges: {partsupp=>#<Set: {partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier}>}) * 32000.0/1 , Aggregation COUNT([]) SUM([partsupp.ps_supplycost, partsupp.ps_availqty]) AVG([]) MAX([]) GROUP BY([])]
Executing Query: SELECT lineitem.l_shipmode, sum(l_orderkey.o_orderpriority) FROM lineitem.l_orderkey WHERE lineitem.l_shipmode = ? AND lineitem.l_commitdate < ? AND lineitem.l_commitdate > ? AND lineitem.l_shipdate < ? AND lineitem.l_receiptdate > ? AND lineitem.l_receiptdate >= ? AND lineitem.l_receiptdate < ? ORDER BY lineitem.l_shipmode GROUP BY lineitem.l_shipmode -- Q12
    Executing Plan: [Index lookup i369452371 [lineitem.l_shipmode] [lineitem.l_commitdate, lineitem.l_linenumber, orders.o_orderkey] â†’ [orders.o_orderpriority, lineitem.l_shipdate, lineitem.l_receiptdate]  $76 Graph(nodes: lineitem, orders, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem}>}) * 85714.28571428572/1 , Aggregation COUNT([]) SUM([orders.o_orderpriority]) AVG([]) MAX([]) GROUP BY([lineitem.l_shipmode])]
Executing INSERT INTO lineitem SET l_linenumber=?, l_quantity=?, l_extendedprice=?, l_discount=?, l_tax = ?, l_returnflag=?, l_linestatus=?, l_shipdate=?, l_commitdate=?, l_receiptdate=?, l_shipmode=?, l_comment=?, dummy=? AND CONNECT TO l_partkey(?), l_orderkey(?) -- lineitem_insert
Executing INSERT INTO orders SET o_orderkey=?, o_orderstatus=?, o_totalprice=?, o_orderdate=?, o_orderpriority=?, o_clerk=?, o_shippriority=?, o_comment=?, dummy=? AND CONNECT TO from_lineitem(?), o_custkey(?) -- orders_insert
cleanup
[33m timestep: 3 ===================================================== [0m
Executing Query: SELECT ps_suppkey.s_acctbal, ps_suppkey.s_name, s_nationkey.n_name, part.p_partkey, part.p_mfgr, ps_suppkey.s_address, ps_suppkey.s_phone, ps_suppkey.s_comment FROM part.from_partsupp.ps_suppkey.s_nationkey.n_regionkey WHERE part.p_size = ? AND part.p_type = ? AND n_regionkey.r_name = ? AND from_partsupp.ps_supplycost = ? ORDER BY ps_suppkey.s_acctbal, s_nationkey.n_name, ps_suppkey.s_name -- Q2_outer
    Executing Plan: [Index lookup i662047096 [region.r_name] [part.p_size, part.p_type, partsupp.ps_supplycost, supplier.s_acctbal, nation.n_name, supplier.s_name, region.r_regionkey, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey, part.p_partkey] â†’ [part.p_mfgr, supplier.s_address, supplier.s_phone, supplier.s_comment]  $184 Graph(nodes: part, partsupp, supplier, nation, region, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey, partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 0.0026702715332365366/1 ]
Executing Query: SELECT max(partsupp.ps_supplycost) FROM partsupp.ps_suppkey.s_nationkey.n_regionkey WHERE n_regionkey.r_name = ? -- Q2_inner
    Executing Plan: [Index lookup i144261828 [region.r_name] [region.r_regionkey, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey] â†’ [partsupp.ps_supplycost]  $82 Graph(nodes: partsupp, supplier, nation, region, edges: {partsupp=>#<Set: {partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 160000.0/1 , Aggregation COUNT([]) SUM([]) AVG([]) MAX([partsupp.ps_supplycost]) GROUP BY([])]
Executing Query: SELECT l_orderkey.o_orderkey, sum(lineitem.l_extendedprice), sum(lineitem.l_discount), l_orderkey.o_orderdate, l_orderkey.o_shippriority FROM lineitem.l_orderkey.o_custkey WHERE o_custkey.c_mktsegment = ? AND l_orderkey.o_orderdate < ? AND lineitem.l_shipdate > ? ORDER BY lineitem.l_extendedprice, lineitem.l_discount, l_orderkey.o_orderdate GROUP BY l_orderkey.o_orderkey, l_orderkey.o_orderdate, l_orderkey.o_shippriority -- Q3
    Executing Plan: [Index lookup i1726533611 [customer.c_mktsegment] [lineitem.l_extendedprice, lineitem.l_discount, orders.o_orderdate, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber] â†’ [orders.o_shippriority, lineitem.l_shipdate]  $98 Graph(nodes: lineitem, orders, customer, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders}>}) * 1200000.0/1 , Filter [] orders.o_orderdate , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([orders.o_orderkey, orders.o_orderdate, orders.o_shippriority])]
Executing Query: SELECT c_nationkey.n_name, sum(lineitem.l_extendedprice), sum(lineitem.l_discount) FROM lineitem.l_orderkey.o_custkey.c_nationkey.n_regionkey WHERE n_regionkey.r_name = ? AND l_orderkey.o_orderdate >= ? AND l_orderkey.o_orderdate < ? ORDER BY lineitem.l_extendedprice, lineitem.l_discount GROUP BY c_nationkey.n_name -- Q5
    Executing Plan: [Index lookup i3675016685 [region.r_name] [lineitem.l_extendedprice, lineitem.l_discount, orders.o_orderdate, region.r_regionkey, nation.n_nationkey, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber] â†’ [nation.n_name]  $124 Graph(nodes: lineitem, orders, customer, nation, region, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 1200000.0/1 , Filter [] orders.o_orderdate , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([nation.n_name])]
Executing Query: SELECT c_nationkey.n_name, lineitem.l_shipdate, sum(lineitem.l_extendedprice), sum(lineitem.l_discount) FROM lineitem.l_orderkey.o_custkey.c_nationkey WHERE c_nationkey.n_name = ? AND lineitem.l_shipdate < ? AND lineitem.l_shipdate > ? ORDER BY c_nationkey.n_name, lineitem.l_shipdate GROUP BY c_nationkey.n_name, lineitem.l_shipdate -- Q7
    Executing Plan: [Index lookup i1327449593 [nation.n_name] [lineitem.l_shipdate, nation.n_nationkey, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber] â†’ [lineitem.l_extendedprice, lineitem.l_discount]  $98 Graph(nodes: lineitem, orders, customer, nation, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>}) * 24000.0/1 , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([nation.n_name, lineitem.l_shipdate])]
Executing Query: SELECT l_orderkey.o_orderdate, sum(from_lineitem.l_extendedprice), sum(from_lineitem.l_discount) FROM part.from_partsupp.from_lineitem.l_orderkey.o_custkey.c_nationkey.n_regionkey WHERE c_nationkey.n_name = ? AND n_regionkey.r_name = ? AND l_orderkey.o_orderdate < ? AND l_orderkey.o_orderdate > ? AND part.p_type = ? ORDER BY l_orderkey.o_orderdate GROUP BY l_orderkey.o_orderdate -- Q8
    Executing Plan: [Index lookup i3675016685 [region.r_name] [lineitem.l_extendedprice, lineitem.l_discount, orders.o_orderdate, region.r_regionkey, nation.n_nationkey, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber] â†’ [nation.n_name]  $124 Graph(nodes: lineitem, orders, customer, nation, region, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 1200000.0/1 , Filter [nation.n_name] orders.o_orderdate , Index lookup i1891546182 [lineitem.l_linenumber] [partsupp.ps_partkey, part.p_partkey] â†’ [part.p_type, lineitem.l_extendedprice, lineitem.l_discount]  $74 Graph(nodes: part, partsupp, lineitem, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey, partsupp.from_lineitem}>, lineitem=>#<Set: {lineitem.l_suppkey}>}) * 4800.0/4800.0 , Filter [part.p_type]  , Sort [orders.o_orderdate], Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([orders.o_orderdate])]
Executing Query: SELECT c_nationkey.n_name, l_orderkey.o_orderdate, sum(from_lineitem.l_extendedprice), sum(from_lineitem.l_discount), sum(from_partsupp.ps_supplycost), sum(from_lineitem.l_quantity) FROM part.from_partsupp.from_lineitem.l_orderkey.o_custkey.c_nationkey WHERE part.p_name = ? AND l_orderkey.o_orderkey = ? ORDER BY c_nationkey.n_name, l_orderkey.o_orderdate GROUP BY c_nationkey.n_name, l_orderkey.o_orderdate -- Q9
    Executing Plan: [Index lookup i2588666510 [part.p_name] [partsupp.ps_partkey, part.p_partkey] â†’ []  $42 Graph(nodes: partsupp, part, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey}>}) * 10.000150002250034/1 , Index lookup i3670917302 [partsupp.ps_partkey] [nation.n_name, orders.o_orderdate, customer.c_custkey, lineitem.l_linenumber, nation.n_nationkey, orders.o_orderkey] â†’ [lineitem.l_extendedprice, lineitem.l_discount, partsupp.ps_supplycost, lineitem.l_quantity]  $130 Graph(nodes: partsupp, lineitem, orders, customer, nation, edges: {partsupp=>#<Set: {partsupp.from_lineitem}>, lineitem=>#<Set: {lineitem.l_suppkey, lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>}) * 0.0002000030000450007/10.000150002250034 , Filter [orders.o_orderkey]  , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount, partsupp.ps_supplycost, lineitem.l_quantity]) AVG([]) MAX([]) GROUP BY([nation.n_name, orders.o_orderdate])]
Executing Query: SELECT o_custkey.c_custkey, o_custkey.c_name, sum(lineitem.l_extendedprice), sum(lineitem.l_discount), o_custkey.c_acctbal, c_nationkey.n_name, o_custkey.c_address, o_custkey.c_phone, o_custkey.c_comment FROM lineitem.l_orderkey.o_custkey.c_nationkey WHERE l_orderkey.o_orderdate >= ? AND l_orderkey.o_orderdate < ? AND lineitem.l_returnflag = ? ORDER BY lineitem.l_extendedprice, lineitem.l_discount GROUP BY o_custkey.c_custkey, o_custkey.c_name, o_custkey.c_acctbal, o_custkey.c_phone, c_nationkey.n_name, o_custkey.c_address, o_custkey.c_comment -- Q10
    Executing Plan: [Index lookup i1394347799 [lineitem.l_returnflag] [lineitem.l_extendedprice, lineitem.l_discount, orders.o_orderdate, lineitem.l_linenumber, orders.o_orderkey, customer.c_custkey, nation.n_nationkey] â†’ [customer.c_name, customer.c_acctbal, nation.n_name, customer.c_address, customer.c_phone, customer.c_comment]  $156 Graph(nodes: lineitem, orders, customer, nation, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>}) * 2000000.0/1 , Filter [] orders.o_orderdate , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment])]
Executing Query: SELECT sum(partsupp.ps_supplycost), sum(partsupp.ps_availqty) FROM partsupp.ps_suppkey.s_nationkey WHERE s_nationkey.n_name = ? AND partsupp.ps_supplycost = ? AND partsupp.ps_availqty = ? ORDER BY partsupp.ps_supplycost, partsupp.ps_availqty GROUP BY partsupp.ps_partkey -- Q11_outer
    Executing Plan: [Index lookup i1774703822 [nation.n_name] [partsupp.ps_supplycost, partsupp.ps_availqty, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey] â†’ []  $74 Graph(nodes: partsupp, supplier, nation, edges: {partsupp=>#<Set: {partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier}>}) * 0.03204325839883844/1 , Aggregation COUNT([]) SUM([partsupp.ps_supplycost, partsupp.ps_availqty]) AVG([]) MAX([]) GROUP BY([partsupp.ps_partkey])]
Executing Query: SELECT sum(partsupp.ps_supplycost), sum(partsupp.ps_availqty) FROM partsupp.ps_suppkey.s_nationkey WHERE s_nationkey.n_name = ? -- Q11_inner
    Executing Plan: [Index lookup i1774703822 [nation.n_name] [partsupp.ps_supplycost, partsupp.ps_availqty, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey] â†’ []  $74 Graph(nodes: partsupp, supplier, nation, edges: {partsupp=>#<Set: {partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier}>}) * 32000.0/1 , Aggregation COUNT([]) SUM([partsupp.ps_supplycost, partsupp.ps_availqty]) AVG([]) MAX([]) GROUP BY([])]
Executing Query: SELECT lineitem.l_shipmode, sum(l_orderkey.o_orderpriority) FROM lineitem.l_orderkey WHERE lineitem.l_shipmode = ? AND lineitem.l_commitdate < ? AND lineitem.l_commitdate > ? AND lineitem.l_shipdate < ? AND lineitem.l_receiptdate > ? AND lineitem.l_receiptdate >= ? AND lineitem.l_receiptdate < ? ORDER BY lineitem.l_shipmode GROUP BY lineitem.l_shipmode -- Q12
    Executing Plan: [Index lookup i369452371 [lineitem.l_shipmode] [lineitem.l_commitdate, lineitem.l_linenumber, orders.o_orderkey] â†’ [orders.o_orderpriority, lineitem.l_shipdate, lineitem.l_receiptdate]  $76 Graph(nodes: lineitem, orders, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem}>}) * 85714.28571428572/1 , Aggregation COUNT([]) SUM([orders.o_orderpriority]) AVG([]) MAX([]) GROUP BY([lineitem.l_shipmode])]
Executing INSERT INTO lineitem SET l_linenumber=?, l_quantity=?, l_extendedprice=?, l_discount=?, l_tax = ?, l_returnflag=?, l_linestatus=?, l_shipdate=?, l_commitdate=?, l_receiptdate=?, l_shipmode=?, l_comment=?, dummy=? AND CONNECT TO l_partkey(?), l_orderkey(?) -- lineitem_insert
Executing INSERT INTO orders SET o_orderkey=?, o_orderstatus=?, o_totalprice=?, o_orderdate=?, o_orderpriority=?, o_clerk=?, o_shippriority=?, o_comment=?, dummy=? AND CONNECT TO from_lineitem(?), o_custkey(?) -- orders_insert
cleanup
[33m timestep: 4 ===================================================== [0m
Executing Query: SELECT ps_suppkey.s_acctbal, ps_suppkey.s_name, s_nationkey.n_name, part.p_partkey, part.p_mfgr, ps_suppkey.s_address, ps_suppkey.s_phone, ps_suppkey.s_comment FROM part.from_partsupp.ps_suppkey.s_nationkey.n_regionkey WHERE part.p_size = ? AND part.p_type = ? AND n_regionkey.r_name = ? AND from_partsupp.ps_supplycost = ? ORDER BY ps_suppkey.s_acctbal, s_nationkey.n_name, ps_suppkey.s_name -- Q2_outer
    Executing Plan: [Index lookup i662047096 [region.r_name] [part.p_size, part.p_type, partsupp.ps_supplycost, supplier.s_acctbal, nation.n_name, supplier.s_name, region.r_regionkey, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey, part.p_partkey] â†’ [part.p_mfgr, supplier.s_address, supplier.s_phone, supplier.s_comment]  $184 Graph(nodes: part, partsupp, supplier, nation, region, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey, partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 0.0026702715332365366/1 ]
Executing Query: SELECT max(partsupp.ps_supplycost) FROM partsupp.ps_suppkey.s_nationkey.n_regionkey WHERE n_regionkey.r_name = ? -- Q2_inner
    Executing Plan: [Index lookup i144261828 [region.r_name] [region.r_regionkey, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey] â†’ [partsupp.ps_supplycost]  $82 Graph(nodes: partsupp, supplier, nation, region, edges: {partsupp=>#<Set: {partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 160000.0/1 , Aggregation COUNT([]) SUM([]) AVG([]) MAX([partsupp.ps_supplycost]) GROUP BY([])]
Executing Query: SELECT l_orderkey.o_orderkey, sum(lineitem.l_extendedprice), sum(lineitem.l_discount), l_orderkey.o_orderdate, l_orderkey.o_shippriority FROM lineitem.l_orderkey.o_custkey WHERE o_custkey.c_mktsegment = ? AND l_orderkey.o_orderdate < ? AND lineitem.l_shipdate > ? ORDER BY lineitem.l_extendedprice, lineitem.l_discount, l_orderkey.o_orderdate GROUP BY l_orderkey.o_orderkey, l_orderkey.o_orderdate, l_orderkey.o_shippriority -- Q3
    Executing Plan: [Index lookup i1726533611 [customer.c_mktsegment] [lineitem.l_extendedprice, lineitem.l_discount, orders.o_orderdate, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber] â†’ [orders.o_shippriority, lineitem.l_shipdate]  $98 Graph(nodes: lineitem, orders, customer, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders}>}) * 1200000.0/1 , Filter [] orders.o_orderdate , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([orders.o_orderkey, orders.o_orderdate, orders.o_shippriority])]
Executing Query: SELECT c_nationkey.n_name, sum(lineitem.l_extendedprice), sum(lineitem.l_discount) FROM lineitem.l_orderkey.o_custkey.c_nationkey.n_regionkey WHERE n_regionkey.r_name = ? AND l_orderkey.o_orderdate >= ? AND l_orderkey.o_orderdate < ? ORDER BY lineitem.l_extendedprice, lineitem.l_discount GROUP BY c_nationkey.n_name -- Q5
    Executing Plan: [Index lookup i3675016685 [region.r_name] [lineitem.l_extendedprice, lineitem.l_discount, orders.o_orderdate, region.r_regionkey, nation.n_nationkey, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber] â†’ [nation.n_name]  $124 Graph(nodes: lineitem, orders, customer, nation, region, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 1200000.0/1 , Filter [] orders.o_orderdate , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([nation.n_name])]
Executing Query: SELECT c_nationkey.n_name, lineitem.l_shipdate, sum(lineitem.l_extendedprice), sum(lineitem.l_discount) FROM lineitem.l_orderkey.o_custkey.c_nationkey WHERE c_nationkey.n_name = ? AND lineitem.l_shipdate < ? AND lineitem.l_shipdate > ? ORDER BY c_nationkey.n_name, lineitem.l_shipdate GROUP BY c_nationkey.n_name, lineitem.l_shipdate -- Q7
    Executing Plan: [Index lookup i1327449593 [nation.n_name] [lineitem.l_shipdate, nation.n_nationkey, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber] â†’ [lineitem.l_extendedprice, lineitem.l_discount]  $98 Graph(nodes: lineitem, orders, customer, nation, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>}) * 24000.0/1 , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([nation.n_name, lineitem.l_shipdate])]
Executing Query: SELECT l_orderkey.o_orderdate, sum(from_lineitem.l_extendedprice), sum(from_lineitem.l_discount) FROM part.from_partsupp.from_lineitem.l_orderkey.o_custkey.c_nationkey.n_regionkey WHERE c_nationkey.n_name = ? AND n_regionkey.r_name = ? AND l_orderkey.o_orderdate < ? AND l_orderkey.o_orderdate > ? AND part.p_type = ? ORDER BY l_orderkey.o_orderdate GROUP BY l_orderkey.o_orderdate -- Q8
    Executing Plan: [Index lookup i3675016685 [region.r_name] [lineitem.l_extendedprice, lineitem.l_discount, orders.o_orderdate, region.r_regionkey, nation.n_nationkey, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber] â†’ [nation.n_name]  $124 Graph(nodes: lineitem, orders, customer, nation, region, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 1200000.0/1 , Filter [nation.n_name] orders.o_orderdate , Index lookup i1891546182 [lineitem.l_linenumber] [partsupp.ps_partkey, part.p_partkey] â†’ [part.p_type, lineitem.l_extendedprice, lineitem.l_discount]  $74 Graph(nodes: part, partsupp, lineitem, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey, partsupp.from_lineitem}>, lineitem=>#<Set: {lineitem.l_suppkey}>}) * 4800.0/4800.0 , Filter [part.p_type]  , Sort [orders.o_orderdate], Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([orders.o_orderdate])]
Executing Query: SELECT c_nationkey.n_name, l_orderkey.o_orderdate, sum(from_lineitem.l_extendedprice), sum(from_lineitem.l_discount), sum(from_partsupp.ps_supplycost), sum(from_lineitem.l_quantity) FROM part.from_partsupp.from_lineitem.l_orderkey.o_custkey.c_nationkey WHERE part.p_name = ? AND l_orderkey.o_orderkey = ? ORDER BY c_nationkey.n_name, l_orderkey.o_orderdate GROUP BY c_nationkey.n_name, l_orderkey.o_orderdate -- Q9
    Executing Plan: [Index lookup i2588666510 [part.p_name] [partsupp.ps_partkey, part.p_partkey] â†’ []  $42 Graph(nodes: partsupp, part, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey}>}) * 10.000150002250034/1 , Index lookup i3670917302 [partsupp.ps_partkey] [nation.n_name, orders.o_orderdate, customer.c_custkey, lineitem.l_linenumber, nation.n_nationkey, orders.o_orderkey] â†’ [lineitem.l_extendedprice, lineitem.l_discount, partsupp.ps_supplycost, lineitem.l_quantity]  $130 Graph(nodes: partsupp, lineitem, orders, customer, nation, edges: {partsupp=>#<Set: {partsupp.from_lineitem}>, lineitem=>#<Set: {lineitem.l_suppkey, lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>}) * 0.0002000030000450007/10.000150002250034 , Filter [orders.o_orderkey]  , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount, partsupp.ps_supplycost, lineitem.l_quantity]) AVG([]) MAX([]) GROUP BY([nation.n_name, orders.o_orderdate])]
Executing Query: SELECT o_custkey.c_custkey, o_custkey.c_name, sum(lineitem.l_extendedprice), sum(lineitem.l_discount), o_custkey.c_acctbal, c_nationkey.n_name, o_custkey.c_address, o_custkey.c_phone, o_custkey.c_comment FROM lineitem.l_orderkey.o_custkey.c_nationkey WHERE l_orderkey.o_orderdate >= ? AND l_orderkey.o_orderdate < ? AND lineitem.l_returnflag = ? ORDER BY lineitem.l_extendedprice, lineitem.l_discount GROUP BY o_custkey.c_custkey, o_custkey.c_name, o_custkey.c_acctbal, o_custkey.c_phone, c_nationkey.n_name, o_custkey.c_address, o_custkey.c_comment -- Q10
    Executing Plan: [Index lookup i1394347799 [lineitem.l_returnflag] [lineitem.l_extendedprice, lineitem.l_discount, orders.o_orderdate, lineitem.l_linenumber, orders.o_orderkey, customer.c_custkey, nation.n_nationkey] â†’ [customer.c_name, customer.c_acctbal, nation.n_name, customer.c_address, customer.c_phone, customer.c_comment]  $156 Graph(nodes: lineitem, orders, customer, nation, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>}) * 2000000.0/1 , Filter [] orders.o_orderdate , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment])]
Executing Query: SELECT sum(partsupp.ps_supplycost), sum(partsupp.ps_availqty) FROM partsupp.ps_suppkey.s_nationkey WHERE s_nationkey.n_name = ? AND partsupp.ps_supplycost = ? AND partsupp.ps_availqty = ? ORDER BY partsupp.ps_supplycost, partsupp.ps_availqty GROUP BY partsupp.ps_partkey -- Q11_outer
    Executing Plan: [Index lookup i1774703822 [nation.n_name] [partsupp.ps_supplycost, partsupp.ps_availqty, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey] â†’ []  $74 Graph(nodes: partsupp, supplier, nation, edges: {partsupp=>#<Set: {partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier}>}) * 0.03204325839883844/1 , Aggregation COUNT([]) SUM([partsupp.ps_supplycost, partsupp.ps_availqty]) AVG([]) MAX([]) GROUP BY([partsupp.ps_partkey])]
Executing Query: SELECT sum(partsupp.ps_supplycost), sum(partsupp.ps_availqty) FROM partsupp.ps_suppkey.s_nationkey WHERE s_nationkey.n_name = ? -- Q11_inner
    Executing Plan: [Index lookup i1774703822 [nation.n_name] [partsupp.ps_supplycost, partsupp.ps_availqty, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey] â†’ []  $74 Graph(nodes: partsupp, supplier, nation, edges: {partsupp=>#<Set: {partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier}>}) * 32000.0/1 , Aggregation COUNT([]) SUM([partsupp.ps_supplycost, partsupp.ps_availqty]) AVG([]) MAX([]) GROUP BY([])]
Executing Query: SELECT lineitem.l_shipmode, sum(l_orderkey.o_orderpriority) FROM lineitem.l_orderkey WHERE lineitem.l_shipmode = ? AND lineitem.l_commitdate < ? AND lineitem.l_commitdate > ? AND lineitem.l_shipdate < ? AND lineitem.l_receiptdate > ? AND lineitem.l_receiptdate >= ? AND lineitem.l_receiptdate < ? ORDER BY lineitem.l_shipmode GROUP BY lineitem.l_shipmode -- Q12
    Executing Plan: [Index lookup i369452371 [lineitem.l_shipmode] [lineitem.l_commitdate, lineitem.l_linenumber, orders.o_orderkey] â†’ [orders.o_orderpriority, lineitem.l_shipdate, lineitem.l_receiptdate]  $76 Graph(nodes: lineitem, orders, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem}>}) * 85714.28571428572/1 , Aggregation COUNT([]) SUM([orders.o_orderpriority]) AVG([]) MAX([]) GROUP BY([lineitem.l_shipmode])]
Executing INSERT INTO lineitem SET l_linenumber=?, l_quantity=?, l_extendedprice=?, l_discount=?, l_tax = ?, l_returnflag=?, l_linestatus=?, l_shipdate=?, l_commitdate=?, l_receiptdate=?, l_shipmode=?, l_comment=?, dummy=? AND CONNECT TO l_partkey(?), l_orderkey(?) -- lineitem_insert
Executing INSERT INTO orders SET o_orderkey=?, o_orderstatus=?, o_totalprice=?, o_orderdate=?, o_orderpriority=?, o_clerk=?, o_shippriority=?, o_comment=?, dummy=? AND CONNECT TO from_lineitem(?), o_custkey(?) -- orders_insert
cleanup
[33m timestep: 5 ===================================================== [0m
Executing Query: SELECT ps_suppkey.s_acctbal, ps_suppkey.s_name, s_nationkey.n_name, part.p_partkey, part.p_mfgr, ps_suppkey.s_address, ps_suppkey.s_phone, ps_suppkey.s_comment FROM part.from_partsupp.ps_suppkey.s_nationkey.n_regionkey WHERE part.p_size = ? AND part.p_type = ? AND n_regionkey.r_name = ? AND from_partsupp.ps_supplycost = ? ORDER BY ps_suppkey.s_acctbal, s_nationkey.n_name, ps_suppkey.s_name -- Q2_outer
    Executing Plan: [Index lookup i662047096 [region.r_name] [part.p_size, part.p_type, partsupp.ps_supplycost, supplier.s_acctbal, nation.n_name, supplier.s_name, region.r_regionkey, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey, part.p_partkey] â†’ [part.p_mfgr, supplier.s_address, supplier.s_phone, supplier.s_comment]  $184 Graph(nodes: part, partsupp, supplier, nation, region, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey, partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 0.0026702715332365366/1 ]
Executing Query: SELECT max(partsupp.ps_supplycost) FROM partsupp.ps_suppkey.s_nationkey.n_regionkey WHERE n_regionkey.r_name = ? -- Q2_inner
    Executing Plan: [Index lookup i144261828 [region.r_name] [region.r_regionkey, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey] â†’ [partsupp.ps_supplycost]  $82 Graph(nodes: partsupp, supplier, nation, region, edges: {partsupp=>#<Set: {partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 160000.0/1 , Aggregation COUNT([]) SUM([]) AVG([]) MAX([partsupp.ps_supplycost]) GROUP BY([])]
Executing Query: SELECT l_orderkey.o_orderkey, sum(lineitem.l_extendedprice), sum(lineitem.l_discount), l_orderkey.o_orderdate, l_orderkey.o_shippriority FROM lineitem.l_orderkey.o_custkey WHERE o_custkey.c_mktsegment = ? AND l_orderkey.o_orderdate < ? AND lineitem.l_shipdate > ? ORDER BY lineitem.l_extendedprice, lineitem.l_discount, l_orderkey.o_orderdate GROUP BY l_orderkey.o_orderkey, l_orderkey.o_orderdate, l_orderkey.o_shippriority -- Q3
    Executing Plan: [Index lookup i1726533611 [customer.c_mktsegment] [lineitem.l_extendedprice, lineitem.l_discount, orders.o_orderdate, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber] â†’ [orders.o_shippriority, lineitem.l_shipdate]  $98 Graph(nodes: lineitem, orders, customer, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders}>}) * 1200000.0/1 , Filter [] orders.o_orderdate , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([orders.o_orderkey, orders.o_orderdate, orders.o_shippriority])]
Executing Query: SELECT c_nationkey.n_name, sum(lineitem.l_extendedprice), sum(lineitem.l_discount) FROM lineitem.l_orderkey.o_custkey.c_nationkey.n_regionkey WHERE n_regionkey.r_name = ? AND l_orderkey.o_orderdate >= ? AND l_orderkey.o_orderdate < ? ORDER BY lineitem.l_extendedprice, lineitem.l_discount GROUP BY c_nationkey.n_name -- Q5
    Executing Plan: [Index lookup i3675016685 [region.r_name] [lineitem.l_extendedprice, lineitem.l_discount, orders.o_orderdate, region.r_regionkey, nation.n_nationkey, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber] â†’ [nation.n_name]  $124 Graph(nodes: lineitem, orders, customer, nation, region, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 1200000.0/1 , Filter [] orders.o_orderdate , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([nation.n_name])]
Executing Query: SELECT c_nationkey.n_name, lineitem.l_shipdate, sum(lineitem.l_extendedprice), sum(lineitem.l_discount) FROM lineitem.l_orderkey.o_custkey.c_nationkey WHERE c_nationkey.n_name = ? AND lineitem.l_shipdate < ? AND lineitem.l_shipdate > ? ORDER BY c_nationkey.n_name, lineitem.l_shipdate GROUP BY c_nationkey.n_name, lineitem.l_shipdate -- Q7
    Executing Plan: [Index lookup i1327449593 [nation.n_name] [lineitem.l_shipdate, nation.n_nationkey, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber] â†’ [lineitem.l_extendedprice, lineitem.l_discount]  $98 Graph(nodes: lineitem, orders, customer, nation, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>}) * 24000.0/1 , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([nation.n_name, lineitem.l_shipdate])]
Executing Query: SELECT l_orderkey.o_orderdate, sum(from_lineitem.l_extendedprice), sum(from_lineitem.l_discount) FROM part.from_partsupp.from_lineitem.l_orderkey.o_custkey.c_nationkey.n_regionkey WHERE c_nationkey.n_name = ? AND n_regionkey.r_name = ? AND l_orderkey.o_orderdate < ? AND l_orderkey.o_orderdate > ? AND part.p_type = ? ORDER BY l_orderkey.o_orderdate GROUP BY l_orderkey.o_orderdate -- Q8
    Executing Plan: [Index lookup i3675016685 [region.r_name] [lineitem.l_extendedprice, lineitem.l_discount, orders.o_orderdate, region.r_regionkey, nation.n_nationkey, customer.c_custkey, orders.o_orderkey, lineitem.l_linenumber] â†’ [nation.n_name]  $124 Graph(nodes: lineitem, orders, customer, nation, region, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer, nation.n_regionkey}>, region=>#<Set: {region.from_nation}>}) * 1200000.0/1 , Filter [nation.n_name] orders.o_orderdate , Index lookup i1891546182 [lineitem.l_linenumber] [partsupp.ps_partkey, part.p_partkey] â†’ [part.p_type, lineitem.l_extendedprice, lineitem.l_discount]  $74 Graph(nodes: part, partsupp, lineitem, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey, partsupp.from_lineitem}>, lineitem=>#<Set: {lineitem.l_suppkey}>}) * 4800.0/4800.0 , Filter [part.p_type]  , Sort [orders.o_orderdate], Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([orders.o_orderdate])]
Executing Query: SELECT c_nationkey.n_name, l_orderkey.o_orderdate, sum(from_lineitem.l_extendedprice), sum(from_lineitem.l_discount), sum(from_partsupp.ps_supplycost), sum(from_lineitem.l_quantity) FROM part.from_partsupp.from_lineitem.l_orderkey.o_custkey.c_nationkey WHERE part.p_name = ? AND l_orderkey.o_orderkey = ? ORDER BY c_nationkey.n_name, l_orderkey.o_orderdate GROUP BY c_nationkey.n_name, l_orderkey.o_orderdate -- Q9
    Executing Plan: [Index lookup i2588666510 [part.p_name] [partsupp.ps_partkey, part.p_partkey] â†’ []  $42 Graph(nodes: partsupp, part, edges: {part=>#<Set: {part.from_partsupp}>, partsupp=>#<Set: {partsupp.ps_partkey}>}) * 10.000150002250034/1 , Index lookup i3670917302 [partsupp.ps_partkey] [nation.n_name, orders.o_orderdate, customer.c_custkey, lineitem.l_linenumber, nation.n_nationkey, orders.o_orderkey] â†’ [lineitem.l_extendedprice, lineitem.l_discount, partsupp.ps_supplycost, lineitem.l_quantity]  $130 Graph(nodes: partsupp, lineitem, orders, customer, nation, edges: {partsupp=>#<Set: {partsupp.from_lineitem}>, lineitem=>#<Set: {lineitem.l_suppkey, lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>}) * 0.0002000030000450007/10.000150002250034 , Filter [orders.o_orderkey]  , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount, partsupp.ps_supplycost, lineitem.l_quantity]) AVG([]) MAX([]) GROUP BY([nation.n_name, orders.o_orderdate])]
Executing Query: SELECT o_custkey.c_custkey, o_custkey.c_name, sum(lineitem.l_extendedprice), sum(lineitem.l_discount), o_custkey.c_acctbal, c_nationkey.n_name, o_custkey.c_address, o_custkey.c_phone, o_custkey.c_comment FROM lineitem.l_orderkey.o_custkey.c_nationkey WHERE l_orderkey.o_orderdate >= ? AND l_orderkey.o_orderdate < ? AND lineitem.l_returnflag = ? ORDER BY lineitem.l_extendedprice, lineitem.l_discount GROUP BY o_custkey.c_custkey, o_custkey.c_name, o_custkey.c_acctbal, o_custkey.c_phone, c_nationkey.n_name, o_custkey.c_address, o_custkey.c_comment -- Q10
    Executing Plan: [Index lookup i1394347799 [lineitem.l_returnflag] [lineitem.l_extendedprice, lineitem.l_discount, orders.o_orderdate, lineitem.l_linenumber, orders.o_orderkey, customer.c_custkey, nation.n_nationkey] â†’ [customer.c_name, customer.c_acctbal, nation.n_name, customer.c_address, customer.c_phone, customer.c_comment]  $156 Graph(nodes: lineitem, orders, customer, nation, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem, orders.o_custkey}>, customer=>#<Set: {customer.from_orders, customer.c_nationkey}>, nation=>#<Set: {nation.from_customer}>}) * 2000000.0/1 , Filter [] orders.o_orderdate , Aggregation COUNT([]) SUM([lineitem.l_extendedprice, lineitem.l_discount]) AVG([]) MAX([]) GROUP BY([customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment])]
Executing Query: SELECT sum(partsupp.ps_supplycost), sum(partsupp.ps_availqty) FROM partsupp.ps_suppkey.s_nationkey WHERE s_nationkey.n_name = ? AND partsupp.ps_supplycost = ? AND partsupp.ps_availqty = ? ORDER BY partsupp.ps_supplycost, partsupp.ps_availqty GROUP BY partsupp.ps_partkey -- Q11_outer
    Executing Plan: [Index lookup i1774703822 [nation.n_name] [partsupp.ps_supplycost, partsupp.ps_availqty, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey] â†’ []  $74 Graph(nodes: partsupp, supplier, nation, edges: {partsupp=>#<Set: {partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier}>}) * 0.03204325839883844/1 , Aggregation COUNT([]) SUM([partsupp.ps_supplycost, partsupp.ps_availqty]) AVG([]) MAX([]) GROUP BY([partsupp.ps_partkey])]
Executing Query: SELECT sum(partsupp.ps_supplycost), sum(partsupp.ps_availqty) FROM partsupp.ps_suppkey.s_nationkey WHERE s_nationkey.n_name = ? -- Q11_inner
    Executing Plan: [Index lookup i1774703822 [nation.n_name] [partsupp.ps_supplycost, partsupp.ps_availqty, nation.n_nationkey, supplier.s_suppkey, partsupp.ps_partkey] â†’ []  $74 Graph(nodes: partsupp, supplier, nation, edges: {partsupp=>#<Set: {partsupp.ps_suppkey}>, supplier=>#<Set: {supplier.from_partsupp, supplier.s_nationkey}>, nation=>#<Set: {nation.from_supplier}>}) * 32000.0/1 , Aggregation COUNT([]) SUM([partsupp.ps_supplycost, partsupp.ps_availqty]) AVG([]) MAX([]) GROUP BY([])]
Executing Query: SELECT lineitem.l_shipmode, sum(l_orderkey.o_orderpriority) FROM lineitem.l_orderkey WHERE lineitem.l_shipmode = ? AND lineitem.l_commitdate < ? AND lineitem.l_commitdate > ? AND lineitem.l_shipdate < ? AND lineitem.l_receiptdate > ? AND lineitem.l_receiptdate >= ? AND lineitem.l_receiptdate < ? ORDER BY lineitem.l_shipmode GROUP BY lineitem.l_shipmode -- Q12
    Executing Plan: [Index lookup i369452371 [lineitem.l_shipmode] [lineitem.l_commitdate, lineitem.l_linenumber, orders.o_orderkey] â†’ [orders.o_orderpriority, lineitem.l_shipdate, lineitem.l_receiptdate]  $76 Graph(nodes: lineitem, orders, edges: {lineitem=>#<Set: {lineitem.l_orderkey}>, orders=>#<Set: {orders.from_lineitem}>}) * 85714.28571428572/1 , Aggregation COUNT([]) SUM([orders.o_orderpriority]) AVG([]) MAX([]) GROUP BY([lineitem.l_shipmode])]
Executing INSERT INTO lineitem SET l_linenumber=?, l_quantity=?, l_extendedprice=?, l_discount=?, l_tax = ?, l_returnflag=?, l_linestatus=?, l_shipdate=?, l_commitdate=?, l_receiptdate=?, l_shipmode=?, l_comment=?, dummy=? AND CONNECT TO l_partkey(?), l_orderkey(?) -- lineitem_insert
Executing INSERT INTO orders SET o_orderkey=?, o_orderstatus=?, o_totalprice=?, o_orderdate=?, o_orderpriority=?, o_clerk=?, o_shippriority=?, o_comment=?, dummy=? AND CONNECT TO from_lineitem(?), o_custkey(?) -- orders_insert
cleanup
